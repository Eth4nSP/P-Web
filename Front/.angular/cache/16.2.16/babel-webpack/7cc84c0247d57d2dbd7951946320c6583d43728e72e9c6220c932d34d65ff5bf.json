{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass PreguntaApiService {\n  http;\n  apiUrl = 'http://localhost:8000/api/preguntas';\n  constructor(http) {\n    this.http = http;\n  }\n  getUserId() {\n    return localStorage.getItem('user_id') || '1'; // fallback a 1 si no existe\n  }\n\n  getPreguntas() {\n    const params = new HttpParams().set('user_id', this.getUserId());\n    return this.http.get(this.apiUrl, {\n      params\n    });\n  }\n  addPregunta(pregunta, dificultad) {\n    return this.http.post(this.apiUrl, {\n      pregunta,\n      dificultad,\n      user_id: this.getUserId()\n    });\n  }\n  updatePregunta(id, pregunta, dificultad) {\n    return this.http.put(`${this.apiUrl}/${id}`, {\n      pregunta,\n      dificultad,\n      user_id: this.getUserId()\n    });\n  }\n  deletePregunta(id) {\n    const params = new HttpParams().set('user_id', this.getUserId());\n    return this.http.delete(`${this.apiUrl}/${id}`, {\n      params\n    });\n  }\n  static ɵfac = function PreguntaApiService_Factory(t) {\n    return new (t || PreguntaApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PreguntaApiService,\n    factory: PreguntaApiService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { PreguntaApiService };","map":{"version":3,"names":["HttpParams","PreguntaApiService","http","apiUrl","constructor","getUserId","localStorage","getItem","getPreguntas","params","set","get","addPregunta","pregunta","dificultad","post","user_id","updatePregunta","id","put","deletePregunta","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ETHAN PIERCE\\Desktop\\web\\P-Web\\Front\\src\\app\\services\\pregunta-api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface PreguntaApi {\r\n  id: number;\r\n  pregunta: string;\r\n  dificultad: 'facil' | 'medio' | 'dificil';\r\n  user_id: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PreguntaApiService {\r\n  private apiUrl = 'http://localhost:8000/api/preguntas';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private getUserId(): string {\r\n    return localStorage.getItem('user_id') || '1'; // fallback a 1 si no existe\r\n  }\r\n\r\n  getPreguntas(): Observable<PreguntaApi[]> {\r\n    const params = new HttpParams().set('user_id', this.getUserId());\r\n    return this.http.get<PreguntaApi[]>(this.apiUrl, { params });\r\n  }\r\n\r\n  addPregunta(pregunta: string, dificultad: 'facil' | 'medio' | 'dificil'): Observable<PreguntaApi> {\r\n    return this.http.post<PreguntaApi>(this.apiUrl, { pregunta, dificultad, user_id: this.getUserId() });\r\n  }\r\n\r\n  updatePregunta(id: number, pregunta: string, dificultad: 'facil' | 'medio' | 'dificil'): Observable<PreguntaApi> {\r\n    return this.http.put<PreguntaApi>(`${this.apiUrl}/${id}`, { pregunta, dificultad, user_id: this.getUserId() });\r\n  }\r\n\r\n  deletePregunta(id: number): Observable<any> {\r\n    const params = new HttpParams().set('user_id', this.getUserId());\r\n    return this.http.delete(`${this.apiUrl}/${id}`, { params });\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAU7D,MACaC,kBAAkB;EAGTC,IAAA;EAFZC,MAAM,GAAG,qCAAqC;EAEtDC,YAAoBF,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAE/BG,SAASA,CAAA;IACf,OAAOC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC;EACjD;;EAEAC,YAAYA,CAAA;IACV,MAAMC,MAAM,GAAG,IAAIT,UAAU,EAAE,CAACU,GAAG,CAAC,SAAS,EAAE,IAAI,CAACL,SAAS,EAAE,CAAC;IAChE,OAAO,IAAI,CAACH,IAAI,CAACS,GAAG,CAAgB,IAAI,CAACR,MAAM,EAAE;MAAEM;IAAM,CAAE,CAAC;EAC9D;EAEAG,WAAWA,CAACC,QAAgB,EAAEC,UAAyC;IACrE,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAc,IAAI,CAACZ,MAAM,EAAE;MAAEU,QAAQ;MAAEC,UAAU;MAAEE,OAAO,EAAE,IAAI,CAACX,SAAS;IAAE,CAAE,CAAC;EACtG;EAEAY,cAAcA,CAACC,EAAU,EAAEL,QAAgB,EAAEC,UAAyC;IACpF,OAAO,IAAI,CAACZ,IAAI,CAACiB,GAAG,CAAc,GAAG,IAAI,CAAChB,MAAM,IAAIe,EAAE,EAAE,EAAE;MAAEL,QAAQ;MAAEC,UAAU;MAAEE,OAAO,EAAE,IAAI,CAACX,SAAS;IAAE,CAAE,CAAC;EAChH;EAEAe,cAAcA,CAACF,EAAU;IACvB,MAAMT,MAAM,GAAG,IAAIT,UAAU,EAAE,CAACU,GAAG,CAAC,SAAS,EAAE,IAAI,CAACL,SAAS,EAAE,CAAC;IAChE,OAAO,IAAI,CAACH,IAAI,CAACmB,MAAM,CAAC,GAAG,IAAI,CAAClB,MAAM,IAAIe,EAAE,EAAE,EAAE;MAAET;IAAM,CAAE,CAAC;EAC7D;;qBAzBWR,kBAAkB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;WAAlBxB,kBAAkB;IAAAyB,OAAA,EAAlBzB,kBAAkB,CAAA0B,IAAA;IAAAC,UAAA,EADL;EAAM;;SACnB3B,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}