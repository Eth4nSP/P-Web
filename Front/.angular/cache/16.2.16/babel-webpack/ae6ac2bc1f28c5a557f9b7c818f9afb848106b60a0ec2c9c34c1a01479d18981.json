{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass PreguntaApiService {\n  http;\n  apiUrl = 'http://localhost:8000/api/preguntas';\n  constructor(http) {\n    this.http = http;\n  }\n  getPreguntas() {\n    return this.http.get(this.apiUrl);\n  }\n  addPregunta(pregunta, dificultad) {\n    return this.http.post(this.apiUrl, {\n      pregunta,\n      dificultad\n    });\n  }\n  updatePregunta(id, pregunta, dificultad) {\n    return this.http.put(`${this.apiUrl}/${id}`, {\n      pregunta,\n      dificultad\n    });\n  }\n  deletePregunta(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static ɵfac = function PreguntaApiService_Factory(t) {\n    return new (t || PreguntaApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PreguntaApiService,\n    factory: PreguntaApiService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { PreguntaApiService };","map":{"version":3,"names":["PreguntaApiService","http","apiUrl","constructor","getPreguntas","get","addPregunta","pregunta","dificultad","post","updatePregunta","id","put","deletePregunta","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ETHAN PIERCE\\Desktop\\web\\P-Web\\Front\\src\\app\\services\\pregunta-api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface PreguntaApi {\r\n  id: number;\r\n  pregunta: string;\r\n  dificultad: 'facil' | 'medio' | 'dificil';\r\n  user_id: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PreguntaApiService {\r\n  private apiUrl = 'http://localhost:8000/api/preguntas';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getPreguntas(): Observable<PreguntaApi[]> {\r\n    return this.http.get<PreguntaApi[]>(this.apiUrl);\r\n  }\r\n\r\n  addPregunta(pregunta: string, dificultad: 'facil' | 'medio' | 'dificil'): Observable<PreguntaApi> {\r\n    return this.http.post<PreguntaApi>(this.apiUrl, { pregunta, dificultad });\r\n  }\r\n\r\n  updatePregunta(id: number, pregunta: string, dificultad: 'facil' | 'medio' | 'dificil'): Observable<PreguntaApi> {\r\n    return this.http.put<PreguntaApi>(`${this.apiUrl}/${id}`, { pregunta, dificultad });\r\n  }\r\n\r\n  deletePregunta(id: number): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n"],"mappings":";;AAWA,MACaA,kBAAkB;EAGTC,IAAA;EAFZC,MAAM,GAAG,qCAAqC;EAEtDC,YAAoBF,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCG,YAAYA,CAAA;IACV,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAgB,IAAI,CAACH,MAAM,CAAC;EAClD;EAEAI,WAAWA,CAACC,QAAgB,EAAEC,UAAyC;IACrE,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAc,IAAI,CAACP,MAAM,EAAE;MAAEK,QAAQ;MAAEC;IAAU,CAAE,CAAC;EAC3E;EAEAE,cAAcA,CAACC,EAAU,EAAEJ,QAAgB,EAAEC,UAAyC;IACpF,OAAO,IAAI,CAACP,IAAI,CAACW,GAAG,CAAc,GAAG,IAAI,CAACV,MAAM,IAAIS,EAAE,EAAE,EAAE;MAAEJ,QAAQ;MAAEC;IAAU,CAAE,CAAC;EACrF;EAEAK,cAAcA,CAACF,EAAU;IACvB,OAAO,IAAI,CAACV,IAAI,CAACa,MAAM,CAAC,GAAG,IAAI,CAACZ,MAAM,IAAIS,EAAE,EAAE,CAAC;EACjD;;qBAnBWX,kBAAkB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;WAAlBlB,kBAAkB;IAAAmB,OAAA,EAAlBnB,kBAAkB,CAAAoB,IAAA;IAAAC,UAAA,EADL;EAAM;;SACnBrB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}