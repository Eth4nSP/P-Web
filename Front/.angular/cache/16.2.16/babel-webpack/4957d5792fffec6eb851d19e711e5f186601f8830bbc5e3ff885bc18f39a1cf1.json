{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { CellComponent } from '../cell/cell.component';\nimport { RouterLink } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../game.service\";\nimport * as i2 from \"@angular/common\";\nfunction BoardComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19)(2, \"h2\");\n    i0.ɵɵtext(3, \"\\u00A1Game Over!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"Se acab\\u00F3 el tiempo.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_5_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.resetGame());\n    });\n    i0.ɵɵtext(7, \"Reiniciar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"a\", 9)(9, \"button\");\n    i0.ɵɵtext(10, \"HOME\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction BoardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19)(2, \"h2\");\n    i0.ɵɵtext(3, \"\\u00A1Felicidades!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"\\u00A1Encontraste todas las palabras!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7, \"Puntaje final: \");\n    i0.ɵɵelementStart(8, \"b\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_6_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.resetGame());\n    });\n    i0.ɵɵtext(11, \"Jugar de nuevo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"a\", 9)(13, \"button\");\n    i0.ɵɵtext(14, \"HOME\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(ctx_r1.finalScore);\n  }\n}\nfunction BoardComponent_div_9_app_cell_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-cell\", 23);\n  }\n  if (rf & 2) {\n    const cell_r12 = ctx.$implicit;\n    const j_r13 = ctx.index;\n    const i_r10 = i0.ɵɵnextContext().index;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", cell_r12)(\"isCarPosition\", ctx_r11.isCarPosition(i_r10, j_r13))(\"isFound\", ctx_r11.isPositionFound(i_r10, j_r13))(\"foundColor\", ctx_r11.getPositionColor(i_r10, j_r13));\n  }\n}\nfunction BoardComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, BoardComponent_div_9_app_cell_1_Template, 1, 4, \"app-cell\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r9);\n  }\n}\nfunction BoardComponent_div_14_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const letter_r17 = ctx.$implicit;\n    const i_r18 = ctx.index;\n    const word_r15 = i0.ɵɵnextContext().$implicit;\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"background-color\", ctx_r16.isLetterFound(word_r15, i_r18) ? ctx_r16.wordColors[word_r15] : \"\");\n    i0.ɵɵclassProp(\"found\", ctx_r16.isLetterFound(word_r15, i_r18));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", letter_r17, \" \");\n  }\n}\nfunction BoardComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"div\", 25);\n    i0.ɵɵtemplate(2, BoardComponent_div_14_span_2_Template, 2, 5, \"span\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 27);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const word_r15 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"border-color\", ctx_r3.wordColors[word_r15]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", word_r15.split(\"\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r3.getWordProgress(word_r15), \" de \", word_r15.length, \" letras \");\n  }\n}\nfunction BoardComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"p\");\n    i0.ɵɵtext(2, \"Tambi\\u00E9n puedes usar las flechas de tu teclado para moverte\");\n    i0.ɵɵelementEnd()();\n  }\n}\nclass BoardComponent {\n  gameService;\n  //Pasos\n  steps = 0;\n  board = [];\n  carPosition = {\n    row: 0,\n    col: 0\n  };\n  wordsDifficulty = [\n  //Fácil: conceptos básicos\n  ['CODE', 'JAVA', 'HTML', 'LOOP', 'BUG', 'NODE', 'CSS'],\n  //Normal: términos intermedios\n  ['OBJECT', 'ARRAY', 'PYTHON', 'CLASS', 'METHOD', 'STRING', 'BINARY'],\n  //Difícil: conceptos avanzados\n  ['RECURSION', 'ASYNC', 'PROMISE', 'ALGORITHM', 'COMPLEXITY', 'THREAD', 'MUTABLE']];\n  words = [];\n  foundPositions = [];\n  activeWordSequences = [];\n  // Colores para cada palabra encontrada\n  wordColors = {\n    // Facil\n    'CODE': '#16a085',\n    'JAVA': '#f39c12',\n    'HTML': '#e67e22',\n    'LOOP': '#2980b9',\n    'BUG': '#c0392b',\n    'NODE': '#27ae60',\n    'CSS': '#8e44ad',\n    // Normal\n    'OBJECT': '#d35400',\n    'ARRAY': '#2980b9',\n    'PYTHON': '#2ecc71',\n    'CLASS': '#9b59b6',\n    'METHOD': '#34495e',\n    'STRING': '#e74c3c',\n    'BINARY': '#27ae60',\n    // Dificil\n    'RECURSION': '#c0392b',\n    'ASYNC': '#8e44ad',\n    'PROMISE': '#2980b9',\n    'ALGORITHM': '#f39c12',\n    'COMPLEXITY': '#34495e',\n    'THREAD': '#16a085',\n    'MUTABLE': '#e67e22' // Naranja quemado\n  };\n  // Objeto para rastrear las letras encontradas de cada palabra\n  wordLetterStates = {};\n  subscription = null;\n  // Detectar dispositivo para adaptar el layout\n  isMobileDevice = false;\n  // Timer variables\n  timer = 0;\n  timerInterval = null;\n  timeLeft = 0;\n  isGameOver = false;\n  keyboardLocked = false;\n  showWinMenu = false; // Nuevo: mostrar menú de victoria\n  finalScore = 0; // Nuevo: puntaje final\n  constructor(gameService) {\n    this.gameService = gameService;\n  }\n  handleKeyDown(event) {\n    if (this.keyboardLocked || this.isGameOver) {\n      event.preventDefault();\n      return;\n    }\n    // Controlar el juego con las teclas de flecha\n    switch (event.key) {\n      case 'ArrowUp':\n        this.moveCar('up');\n        break;\n      case 'ArrowDown':\n        this.moveCar('down');\n        break;\n      case 'ArrowLeft':\n        this.moveCar('left');\n        break;\n      case 'ArrowRight':\n        this.moveCar('right');\n        break;\n    }\n  }\n  onResize() {\n    this.checkDeviceType();\n  }\n  checkDeviceType() {\n    this.isMobileDevice = window.innerWidth <= 768;\n  }\n  ngOnInit() {\n    const dificultad = localStorage.getItem('dificultad') ?? 'facil'; // Guardar dificultad por defecto\n    switch (dificultad) {\n      case 'facil':\n        this.words = [...this.wordsDifficulty[0]]; // Clonar para no mutar el original\n        break;\n      case 'medio':\n        this.words = [...this.wordsDifficulty[1]];\n        break;\n      case 'dificil':\n        this.words = [...this.wordsDifficulty[2]];\n        break;\n      default:\n        this.words = [...this.wordsDifficulty[0]];\n      // Siempre un fallback\n    }\n    // Verificar el tipo de dispositivo\n    this.checkDeviceType();\n    // Inicializar el estado de las letras encontradas para cada palabra\n    this.words.forEach(word => {\n      this.wordLetterStates[word] = Array(word.length).fill(false);\n    });\n    // Inicializar el array de posiciones encontradas y secuencias de palabras\n    this.foundPositions = [];\n    this.activeWordSequences = [];\n    // Inicializar el tablero con letras aleatorias y colocar las palabras\n    this.initializeBoard();\n    // Suscribirse a los cambios de posición del carro\n    this.subscription = this.gameService.getCarPosition().subscribe(position => {\n      this.carPosition = position;\n      // Verificar si la posición actual puede continuar una secuencia de palabra\n      this.checkForWordSequence();\n    });\n    // Definir tiempo según dificultad\n    switch (dificultad) {\n      case 'facil':\n        this.timeLeft = 240; // 2 minutos\n        break;\n      case 'medio':\n        this.timeLeft = 180; // 1.5 minutos\n        break;\n      case 'dificil':\n        this.timeLeft = 120; // 1 minuto\n        break;\n      default:\n        this.timeLeft = 240;\n    }\n    this.isGameOver = false;\n    this.startTimer();\n  }\n  ngOnDestroy() {\n    // Limpiar la suscripción para evitar memory leaks\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n    }\n  }\n  // Inicializa el tablero con letras aleatorias y coloca las palabras\n  initializeBoard() {\n    // Crear un tablero de 10x10\n    const rows = localStorage.getItem('dificultad') === 'facil' ? 10 : localStorage.getItem('dificultad') === 'medio' ? 15 : 20;\n    const cols = localStorage.getItem('dificultad') === 'facil' ? 10 : localStorage.getItem('dificultad') === 'medio' ? 15 : 20;\n    // Inicializar el tablero con letras aleatorias\n    this.board = [];\n    for (let i = 0; i < rows; i++) {\n      this.board[i] = [];\n      for (let j = 0; j < cols; j++) {\n        // Generar letra aleatoria (A-Z)\n        const randomLetter = String.fromCharCode(65 + Math.floor(Math.random() * 26));\n        this.board[i][j] = randomLetter;\n      }\n    }\n    // Colocar las palabras en el tablero de forma aleatoria\n    this.placeWordsRandomly();\n    // Colocar el auto en una posición aleatoria que no contenga una letra de palabra\n    this.placeCarRandomly();\n  }\n  // Coloca las palabras en el tablero aleatoriamente con diferentes orientaciones permitidas\n  placeWordsRandomly() {\n    // Mapa para rastrear las posiciones ocupadas\n    const occupiedPositions = new Set();\n    // Colocar cada palabra\n    for (const word of this.words) {\n      let placed = false;\n      let attempts = 0;\n      const maxAttempts = 100; // Límite de intentos por palabra\n      while (!placed && attempts < maxAttempts) {\n        attempts++;\n        // Elegir una orientación aleatoria: 0=horizontal, 1=vertical, 4=diagonal (tipo grada)\n        const orientation = Math.floor(Math.random() * 3);\n        const actualOrientation = orientation === 2 ? 4 : orientation; // Si es 2, usamos la diagonal (4)\n        // Intentar colocar la palabra con la orientación elegida\n        placed = this.tryPlaceWord(word, actualOrientation, occupiedPositions);\n      }\n      if (!placed) {\n        console.warn(`No se pudo colocar la palabra: ${word}`);\n      }\n    }\n  }\n  // Intenta colocar una palabra en el tablero con la orientación especificada\n  tryPlaceWord(word, orientation, occupiedPositions) {\n    const rows = this.board.length;\n    const cols = this.board[0].length;\n    // Determinar límites para la posición inicial según la orientación\n    let startRowLimit = rows;\n    let startColLimit = cols;\n    switch (orientation) {\n      case 0:\n        // Horizontal\n        startColLimit = cols - word.length + 1;\n        break;\n      case 1:\n        // Vertical\n        startRowLimit = rows - word.length + 1;\n        break;\n      case 4:\n        // Diagonal (tipo grada)\n        startRowLimit = rows - Math.ceil(word.length / 2);\n        startColLimit = cols - Math.ceil(word.length / 2);\n        break;\n    }\n    // Si no hay espacio suficiente, regresar falso\n    if (startRowLimit <= 0 || startColLimit <= 0) {\n      return false;\n    }\n    // Elegir una posición inicial aleatoria\n    const startRow = Math.floor(Math.random() * startRowLimit);\n    const startCol = Math.floor(Math.random() * startColLimit);\n    // Verificar si la palabra cabe en la orientación seleccionada\n    const positions = [];\n    if (orientation === 4) {\n      // Diagonal tipo grada\n      return this.placeWordAsGradient(word, startRow, startCol, occupiedPositions);\n    } else {\n      // Direcciones para las orientaciones 0-1\n      const directions = [[0, 1], [1, 0] // Vertical\n      ];\n\n      const [rowDir, colDir] = directions[orientation];\n      // Verificar si la palabra cabe sin superponerse con otras\n      for (let i = 0; i < word.length; i++) {\n        const row = startRow + i * rowDir;\n        const col = startCol + i * colDir;\n        // Verificar si está dentro del tablero\n        if (row < 0 || row >= rows || col < 0 || col >= cols) {\n          return false;\n        }\n        // Verificar si la posición ya está ocupada por otra letra\n        const posKey = `${row},${col}`;\n        if (occupiedPositions.has(posKey) && this.board[row][col] !== word[i]) {\n          return false;\n        }\n        positions.push([row, col]);\n      }\n      // Colocar la palabra en el tablero\n      for (let i = 0; i < word.length; i++) {\n        const [row, col] = positions[i];\n        this.board[row][col] = word[i];\n        occupiedPositions.add(`${row},${col}`);\n      }\n      return true;\n    }\n  }\n  // Coloca una palabra en forma de grada - diagonal organizada\n  placeWordAsGradient(word, startRow, startCol, occupiedPositions) {\n    const rows = this.board.length;\n    const cols = this.board[0].length;\n    // Elegir dirección de la grada: 0=diagonal↘, 1=diagonal↗\n    const direction = Math.floor(Math.random() * 2);\n    // Posiciones para esta palabra\n    const wordPositions = [];\n    // Intentar colocar cada letra de la palabra\n    for (let i = 0; i < word.length; i++) {\n      let currentRow, currentCol;\n      if (direction === 0) {\n        // Diagonal hacia abajo-derecha\n        currentRow = startRow + i;\n        currentCol = startCol + i;\n      } else {\n        // Diagonal hacia arriba-derecha\n        currentRow = startRow - i;\n        currentCol = startCol + i;\n      }\n      // Verificar si la posición está fuera del tablero\n      if (currentRow < 0 || currentRow >= rows || currentCol < 0 || currentCol >= cols) {\n        return false;\n      }\n      // Verificar si la posición está ocupada\n      const posKey = `${currentRow},${currentCol}`;\n      if (occupiedPositions.has(posKey) && this.board[currentRow][currentCol] !== word[i]) {\n        return false;\n      }\n      wordPositions.push([currentRow, currentCol]);\n    }\n    // Colocar la palabra en el tablero\n    for (let i = 0; i < word.length; i++) {\n      const [row, col] = wordPositions[i];\n      this.board[row][col] = word[i];\n      occupiedPositions.add(`${row},${col}`);\n    }\n    return true;\n  }\n  // Coloca el auto en una posición aleatoria que no contenga una letra de palabra\n  placeCarRandomly() {\n    const rows = this.board.length;\n    const cols = this.board[0].length;\n    // Crear un conjunto de posiciones ocupadas por palabras\n    const wordPositions = new Set();\n    this.foundPositions.forEach(pos => {\n      wordPositions.add(`${pos.row},${pos.col}`);\n    });\n    // Intentar encontrar una posición aleatoria no ocupada\n    let placed = false;\n    let attempts = 0;\n    const maxAttempts = 100;\n    while (!placed && attempts < maxAttempts) {\n      const row = Math.floor(Math.random() * rows);\n      const col = Math.floor(Math.random() * cols);\n      // Verificar si no es parte de una palabra\n      if (!wordPositions.has(`${row},${col}`)) {\n        this.carPosition = {\n          row,\n          col\n        };\n        this.gameService.updateCarPosition(row, col);\n        placed = true;\n      }\n      attempts++;\n    }\n    // Si no se encontró una posición libre, usar la posición (0,0)\n    if (!placed) {\n      this.carPosition = {\n        row: 0,\n        col: 0\n      };\n      this.gameService.updateCarPosition(0, 0);\n    }\n  }\n  // VERSIÓN MEJORADA: Verificar si la posición actual puede iniciar o continuar una secuencia de palabra\n  checkForWordSequence() {\n    const currentRow = this.carPosition.row;\n    const currentCol = this.carPosition.col;\n    const currentLetter = this.board[currentRow][currentCol];\n    // Para cada palabra, comprobamos si se puede iniciar una nueva secuencia\n    for (const word of this.words) {\n      // Si la letra actual coincide con la primera letra de la palabra\n      if (word[0] === currentLetter) {\n        // Verificar si esta posición ya es parte de una secuencia encontrada\n        const alreadyFound = this.foundPositions.some(pos => pos.row === currentRow && pos.col === currentCol);\n        if (!alreadyFound) {\n          // Iniciar una nueva secuencia potencial\n          this.activeWordSequences.push({\n            word: word,\n            positions: [{\n              row: currentRow,\n              col: currentCol\n            }],\n            isComplete: false\n          });\n        }\n      }\n    }\n    // Comprobamos si la letra actual continúa alguna secuencia activa\n    this.continueWordSequences(currentRow, currentCol, currentLetter);\n  }\n  // Verificar si la posición actual continúa alguna secuencia activa\n  continueWordSequences(row, col, letter) {\n    const newSequences = [];\n    // Para cada secuencia activa\n    for (const sequence of this.activeWordSequences) {\n      if (sequence.isComplete) {\n        newSequences.push(sequence);\n        continue;\n      }\n      const word = sequence.word;\n      const nextLetterIndex = sequence.positions.length;\n      // Si ya hemos encontrado toda la palabra, continuamos\n      if (nextLetterIndex >= word.length) {\n        continue;\n      }\n      // Si la letra actual coincide con la siguiente letra esperada\n      if (word[nextLetterIndex] === letter) {\n        // La última posición en la secuencia\n        const lastPos = sequence.positions[sequence.positions.length - 1];\n        // Comprobar si la posición actual es adyacente a la última\n        const rowDiff = Math.abs(row - lastPos.row);\n        const colDiff = Math.abs(col - lastPos.col);\n        // Si la posición actual es adyacente a la última posición\n        if (rowDiff <= 1 && colDiff <= 1 && rowDiff + colDiff > 0) {\n          // Crear una copia de la secuencia y añadir la nueva posición\n          const updatedSequence = {\n            word: sequence.word,\n            positions: [...sequence.positions, {\n              row,\n              col\n            }],\n            isComplete: nextLetterIndex + 1 === word.length\n          };\n          // Si hemos completado la palabra\n          if (updatedSequence.isComplete) {\n            // Marcar las letras como encontradas\n            this.markWordAsFound(updatedSequence);\n          }\n          newSequences.push(updatedSequence);\n        } else {\n          // Si no es adyacente, mantenemos la secuencia original\n          newSequences.push(sequence);\n        }\n      } else {\n        // Si la letra no coincide, mantenemos la secuencia original\n        newSequences.push(sequence);\n      }\n    }\n    this.activeWordSequences = newSequences;\n  }\n  // Marcar una palabra como encontrada\n  markWordAsFound(sequence) {\n    const word = sequence.word;\n    // Verificar si esta palabra ya ha sido completamente encontrada\n    const isAlreadyComplete = this.isWordComplete(word);\n    if (isAlreadyComplete) {\n      return;\n    }\n    // Marcar todas las letras de la palabra como encontradas\n    for (let i = 0; i < sequence.positions.length; i++) {\n      const pos = sequence.positions[i];\n      // Actualizar el estado de las letras encontradas\n      this.wordLetterStates[word][i] = true;\n      // Añadir a las posiciones encontradas\n      this.foundPositions.push({\n        row: pos.row,\n        col: pos.col,\n        word: word,\n        letterIndex: i,\n        color: this.wordColors[word]\n      });\n    }\n    // Si ya se encontraron todas las palabras, mostrar menú de victoria\n    if (this.words.every(w => this.isWordComplete(w))) {\n      this.finalScore = this.calcularPuntaje();\n      this.showWinMenu = true;\n      this.lockKeyboard();\n      this.isGameOver = true;\n      if (this.timerInterval) clearInterval(this.timerInterval);\n    }\n  }\n  // Nuevo: calcular puntaje\n  calcularPuntaje() {\n    // Ejemplo: más puntos por tiempo restante y menos pasos\n    const dificultad = localStorage.getItem('dificultad') || 'medio';\n    const factor = dificultad === 'facil' ? 0.7 : dificultad === 'medio' ? 0.5 : 0.3;\n    return this.timeLeft * factor - this.steps;\n  }\n  // Comprobar si una palabra está completamente encontrada\n  isWordComplete(word) {\n    if (!this.wordLetterStates[word]) {\n      return false;\n    }\n    return this.wordLetterStates[word].every(found => found);\n  }\n  isCarPosition(i, j) {\n    return this.carPosition.row === i && this.carPosition.col === j;\n  }\n  getPositionColor(i, j) {\n    const foundPosition = this.foundPositions.find(pos => pos.row === i && pos.col === j);\n    return foundPosition ? foundPosition.color : undefined;\n  }\n  isPositionFound(i, j) {\n    // Verificar si esta posición específica está en la lista de posiciones encontradas\n    return this.foundPositions.some(pos => pos.row === i && pos.col === j);\n  }\n  isLetterFound(word, letterIndex) {\n    return this.wordLetterStates[word][letterIndex];\n  }\n  getWordProgress(word) {\n    // Contar cuántas letras se han encontrado de esta palabra\n    let count = 0;\n    for (let i = 0; i < word.length; i++) {\n      if (this.wordLetterStates[word][i]) {\n        count++;\n      }\n    }\n    return count;\n  }\n  moveCar(direction) {\n    const newPos = {\n      ...this.carPosition\n    };\n    switch (direction) {\n      case 'up':\n        if (newPos.row > 0) newPos.row--;\n        this.steps++;\n        break;\n      case 'down':\n        if (newPos.row < this.board.length - 1) newPos.row++;\n        this.steps++;\n        break;\n      case 'left':\n        if (newPos.col > 0) newPos.col--;\n        this.steps++;\n        break;\n      case 'right':\n        if (newPos.col < this.board[0].length - 1) newPos.col++;\n        this.steps++;\n        break;\n    }\n    this.gameService.updateCarPosition(newPos.row, newPos.col);\n  }\n  startTimer() {\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n    }\n    this.timerInterval = setInterval(() => {\n      if (this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n        this.isGameOver = true;\n        clearInterval(this.timerInterval);\n      }\n    }, 1000);\n  }\n  resetGame() {\n    // Reiniciar el juego\n    this.initializeBoard();\n    this.foundPositions = [];\n    this.activeWordSequences = [];\n    // Reiniciar el estado de las letras encontradas\n    this.words.forEach(word => {\n      this.wordLetterStates[word] = Array(word.length).fill(false);\n    });\n    // Colocar el auto en una nueva posición aleatoria\n    this.placeCarRandomly();\n    this.steps = 0;\n    this.isGameOver = false;\n    this.showWinMenu = false;\n    this.finalScore = 0;\n    this.unlockKeyboard();\n    // Reiniciar el temporizador\n    const dificultad = localStorage.getItem('dificultad') ?? 'facil';\n    switch (dificultad) {\n      case 'facil':\n        this.timeLeft = 240;\n        break;\n      case 'medio':\n        this.timeLeft = 180;\n        break;\n      case 'dificil':\n        this.timeLeft = 120;\n        break;\n      default:\n        this.timeLeft = 240;\n    }\n    this.startTimer();\n  }\n  // Método para bloquear el teclado\n  lockKeyboard() {\n    this.keyboardLocked = true;\n  }\n  // Método para desbloquear el teclado\n  unlockKeyboard() {\n    this.keyboardLocked = false;\n  }\n  countSteps() {\n    // Contar los pasos desde la posición inicial del carro hasta la actual\n    return Math.abs(this.carPosition.row) + Math.abs(this.carPosition.col);\n  }\n  static ɵfac = function BoardComponent_Factory(t) {\n    return new (t || BoardComponent)(i0.ɵɵdirectiveInject(i1.GameService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BoardComponent,\n    selectors: [[\"app-board\"]],\n    hostBindings: function BoardComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function BoardComponent_keydown_HostBindingHandler($event) {\n          return ctx.handleKeyDown($event);\n        }, false, i0.ɵɵresolveWindow)(\"resize\", function BoardComponent_resize_HostBindingHandler($event) {\n          return ctx.onResize($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 32,\n    vars: 13,\n    consts: [[1, \"game-container\"], [1, \"timer\"], [\"class\", \"game-over-modal\", 4, \"ngIf\"], [1, \"game-layout\"], [1, \"board\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"target-words\"], [1, \"words-container\"], [\"class\", \"word-item\", 3, \"border-color\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/\", \"routerLinkActive\", \"router-link-active\", 1, \"home\"], [\"type\", \"button\", 1, \"reset\", 3, \"click\"], [1, \"controls\"], [\"type\", \"button\", 1, \"btn-up\", 3, \"click\"], [\"type\", \"button\", 1, \"btn-left\", 3, \"click\"], [\"type\", \"button\", 1, \"btn-step\"], [\"type\", \"button\", 1, \"btn-right\", 3, \"click\"], [\"type\", \"button\", 1, \"btn-down\", 3, \"click\"], [\"class\", \"keyboard-instructions\", 4, \"ngIf\"], [1, \"game-over-modal\"], [1, \"game-over-content\"], [3, \"click\"], [1, \"row\"], [3, \"value\", \"isCarPosition\", \"isFound\", \"foundColor\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"isCarPosition\", \"isFound\", \"foundColor\"], [1, \"word-item\"], [1, \"letters\"], [3, \"found\", \"background-color\", 4, \"ngFor\", \"ngForOf\"], [1, \"progress\"], [1, \"keyboard-instructions\"]],\n    template: function BoardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Juego \\\"Sopa de Letras\\\"\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, BoardComponent_div_5_Template, 11, 0, \"div\", 2);\n        i0.ɵɵtemplate(6, BoardComponent_div_6_Template, 15, 1, \"div\", 2);\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"div\", 4);\n        i0.ɵɵtemplate(9, BoardComponent_div_9_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"h3\");\n        i0.ɵɵtext(12, \"Palabras a encontrar:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 7);\n        i0.ɵɵtemplate(14, BoardComponent_div_14_Template, 5, 5, \"div\", 8);\n        i0.ɵɵelementStart(15, \"a\", 9)(16, \"button\");\n        i0.ɵɵtext(17, \"HOME\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function BoardComponent_Template_button_click_18_listener() {\n          return ctx.resetGame();\n        });\n        i0.ɵɵtext(19, \"RESET\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(20, \"div\", 11)(21, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function BoardComponent_Template_button_click_21_listener() {\n          return ctx.moveCar(\"up\");\n        });\n        i0.ɵɵtext(22, \"\\u2191\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function BoardComponent_Template_button_click_23_listener() {\n          return ctx.moveCar(\"left\");\n        });\n        i0.ɵɵtext(24, \"\\u2190\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"button\", 14);\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function BoardComponent_Template_button_click_27_listener() {\n          return ctx.moveCar(\"right\");\n        });\n        i0.ɵɵtext(28, \"\\u2192\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function BoardComponent_Template_button_click_29_listener() {\n          return ctx.moveCar(\"down\");\n        });\n        i0.ɵɵtext(30, \"\\u2193\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(31, BoardComponent_div_31_Template, 3, 0, \"div\", 17);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"game-over\", ctx.isGameOver);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \\u23F0 Tiempo restante: \", ctx.timeLeft, \"s \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isGameOver && !ctx.showWinMenu);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showWinMenu);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"mobile-layout\", ctx.isMobileDevice)(\"desktop-layout\", !ctx.isMobileDevice);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.board);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.words);\n        i0.ɵɵadvance(12);\n        i0.ɵɵtextInterpolate1(\"Step \", ctx.steps, \"\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isMobileDevice);\n      }\n    },\n    dependencies: [CommonModule, i2.NgForOf, i2.NgIf, CellComponent, RouterLink],\n    styles: [\"@charset \\\"UTF-8\\\";\\n.game-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin: 10px auto;\\n  padding: 15px;\\n  font-family: Arial, sans-serif;\\n  background-color: #e9f5ff;\\n  border-radius: 15px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\n  max-width: 100%;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  color: #2c3e50;\\n  margin-bottom: 15px;\\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\\n  text-align: center;\\n}\\n\\n\\n\\n.game-layout[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 105%;\\n  justify-content: center;\\n  gap: 20px;\\n  margin-bottom: 20px;\\n}\\n\\n\\n\\n.desktop-layout[_ngcontent-%COMP%] {\\n  flex-direction: row;\\n  align-items: flex-start;\\n}\\n\\n\\n\\n.mobile-layout[_ngcontent-%COMP%] {\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n.board[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  border: 3px solid #3498db;\\n  border-radius: 8px;\\n  overflow: hidden;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  background-color: #f9f9f9;\\n}\\n\\n.row[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n\\n\\n\\n.controls[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  grid-template-rows: repeat(3, 1fr);\\n  gap: 8px;\\n  width: 100%;\\n  max-width: 200px;\\n  \\n\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  width: 60px;\\n  \\n\\n  height: 60px;\\n  \\n\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  font-size: 28px;\\n  \\n\\n  cursor: pointer;\\n  color: white;\\n  border: none;\\n  border-radius: 12px;\\n  \\n\\n  box-shadow: 0 5px 0 rgba(0, 0, 0, 0.2), inset 0 2px 0 rgba(255, 255, 255, 0.5);\\n  transition: all 0.1s ease;\\n  touch-action: manipulation;\\n  \\n\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-3px);\\n  box-shadow: 0 7px 0 rgba(0, 0, 0, 0.2), inset 0 2px 0 rgba(255, 255, 255, 0.5);\\n}\\n\\nbutton[_ngcontent-%COMP%]:active {\\n  transform: translateY(3px);\\n  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.5);\\n}\\n\\n\\n\\n.btn-up[_ngcontent-%COMP%] {\\n  grid-column: 2;\\n  grid-row: 1;\\n  background-color: #3498db;\\n  \\n\\n  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);\\n}\\n\\n.btn-left[_ngcontent-%COMP%] {\\n  grid-column: 1;\\n  grid-row: 2;\\n  background-color: #f1c40f;\\n  \\n\\n  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);\\n}\\n\\n.btn-right[_ngcontent-%COMP%] {\\n  grid-column: 3;\\n  grid-row: 2;\\n  background-color: #2ecc71;\\n  \\n\\n  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);\\n}\\n\\n.btn-down[_ngcontent-%COMP%] {\\n  grid-column: 2;\\n  grid-row: 3;\\n  background-color: #e74c3c;\\n  \\n\\n  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);\\n}\\n\\n.btn-step[_ngcontent-%COMP%] {\\n  grid-row: 2;\\n  grid-column: 2;\\n  background-color: #1d191f;\\n}\\n\\n\\n\\n.target-words[_ngcontent-%COMP%] {\\n  background-color: #fff;\\n  padding: 15px;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n\\n\\n\\n.desktop-layout[_ngcontent-%COMP%]   .target-words[_ngcontent-%COMP%] {\\n  width: 250px;\\n}\\n\\n\\n\\n.mobile-layout[_ngcontent-%COMP%]   .target-words[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 500px;\\n}\\n\\n.words-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  \\n\\n  gap: 10px;\\n}\\n\\n.word-item[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  background-color: #f8f9fa;\\n  border-radius: 6px;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n  width: 100%;\\n  border-left: 5px solid;\\n  \\n\\n  transition: all 0.3s ease;\\n}\\n\\n.letters[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 5px;\\n}\\n\\n.letters[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  margin: 0 2px;\\n  font-size: 18px;\\n  font-weight: bold;\\n  padding: 2px 4px;\\n  border-radius: 4px;\\n  background-color: #ecf0f1;\\n  min-width: 20px;\\n  text-align: center;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\\n  transition: all 0.3s ease;\\n}\\n\\n.letters[_ngcontent-%COMP%]   .found[_ngcontent-%COMP%] {\\n  color: white;\\n  animation: _ngcontent-%COMP%_pulse 1s;\\n}\\n\\n@keyframes _ngcontent-%COMP%_pulse {\\n  0% {\\n    transform: scale(1);\\n  }\\n  50% {\\n    transform: scale(1.2);\\n  }\\n  100% {\\n    transform: scale(1);\\n  }\\n}\\n.progress[_ngcontent-%COMP%] {\\n  margin-top: 5px;\\n  font-size: 12px;\\n  color: #7f8c8d;\\n}\\n\\n\\n\\n.keyboard-instructions[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  text-align: center;\\n  font-size: 14px;\\n  color: #7f8c8d;\\n  font-style: italic;\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .game-container[_ngcontent-%COMP%] {\\n    padding: 10px;\\n    margin: 5px;\\n  }\\n  h2[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n  }\\n  \\n\\n  .controls[_ngcontent-%COMP%] {\\n    max-width: 200px;\\n    gap: 10px;\\n  }\\n  button[_ngcontent-%COMP%] {\\n    width: 70px;\\n    \\n\\n    height: 70px;\\n    \\n\\n    font-size: 32px;\\n    \\n\\n  }\\n  \\n\\n  .mobile-layout[_ngcontent-%COMP%]   .words-container[_ngcontent-%COMP%] {\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    justify-content: center;\\n  }\\n  .mobile-layout[_ngcontent-%COMP%]   .word-item[_ngcontent-%COMP%] {\\n    min-width: 120px;\\n    flex: 1;\\n  }\\n  .letters[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n    font-size: 16px;\\n    min-width: 16px;\\n  }\\n}\\n@media (max-width: 480px) {\\n  .game-container[_ngcontent-%COMP%] {\\n    padding: 8px;\\n    margin: 2px;\\n  }\\n  \\n\\n  button[_ngcontent-%COMP%] {\\n    width: 65px;\\n    height: 65px;\\n    font-size: 30px;\\n  }\\n  .controls[_ngcontent-%COMP%] {\\n    max-width: 180px;\\n  }\\n  .mobile-layout[_ngcontent-%COMP%]   .word-item[_ngcontent-%COMP%] {\\n    min-width: 100px;\\n  }\\n  .letters[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n    font-size: 14px;\\n    min-width: 14px;\\n  }\\n}\\n\\n\\n@media (min-width: 1024px) {\\n  .game-container[_ngcontent-%COMP%] {\\n    max-width: 1200px;\\n  }\\n  .desktop-layout[_ngcontent-%COMP%] {\\n    gap: 30px;\\n  }\\n  .desktop-layout[_ngcontent-%COMP%]   .target-words[_ngcontent-%COMP%] {\\n    width: 300px;\\n  }\\n  \\n\\n  button[_ngcontent-%COMP%] {\\n    width: 55px;\\n    height: 55px;\\n    font-size: 26px;\\n  }\\n  .controls[_ngcontent-%COMP%] {\\n    max-width: 180px;\\n  }\\n}\\n\\n\\n.word-item[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-2px);\\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);\\n}\\n\\n.board[_ngcontent-%COMP%] {\\n  transition: all 0.3s ease;\\n}\\n\\n\\n\\n.cell.found-letter[_ngcontent-%COMP%] {\\n  animation: _ngcontent-%COMP%_foundLetterPulse 0.6s ease-in-out;\\n}\\n\\n.reset[_ngcontent-%COMP%] {\\n  background-color: red;\\n  width: 120px;\\n}\\n\\n.home[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  background-color: rgb(10, 107, 139);\\n  width: 120px;\\n  font-style: italic;\\n}\\n\\n.home[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n  color: inherit;\\n  display: block;\\n}\\n\\n@keyframes _ngcontent-%COMP%_foundLetterPulse {\\n  0% {\\n    transform: scale(1);\\n    box-shadow: 0 0 0 rgba(255, 255, 255, 0.7);\\n  }\\n  50% {\\n    transform: scale(1.1);\\n    box-shadow: 0 0 20px rgba(255, 255, 255, 0.7);\\n  }\\n  100% {\\n    transform: scale(1);\\n    box-shadow: 0 0 0 rgba(255, 255, 255, 0.7);\\n  }\\n}\\n\\n\\n.timer[_ngcontent-%COMP%] {\\n  font-size: 1.3rem;\\n  font-weight: bold;\\n  color: #2c3e50;\\n  background: #eaf6fb;\\n  border-radius: 8px;\\n  padding: 8px 18px;\\n  margin-bottom: 10px;\\n  box-shadow: 0 2px 8px rgba(52, 152, 219, 0.08);\\n  transition: background 0.3s, color 0.3s;\\n}\\n\\n.timer.game-over[_ngcontent-%COMP%] {\\n  color: #e74c3c;\\n  background: #ffeaea;\\n}\\n\\n.game-over-modal[_ngcontent-%COMP%] {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background: rgba(0, 0, 0, 0.45);\\n  z-index: 9999;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  pointer-events: all;\\n  animation: fadeInBg 0.3s;\\n}\\n\\n.game-over-content[_ngcontent-%COMP%] {\\n  background: #fff;\\n  border-radius: 18px;\\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.25);\\n  padding: 36px 32px 28px 32px;\\n  min-width: 260px;\\n  text-align: center;\\n  animation: popIn 0.35s cubic-bezier(0.68, -0.55, 0.27, 1.55);\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n.game-over-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  color: #e74c3c;\\n  margin-bottom: 10px;\\n  font-size: 2rem;\\n}\\n\\n.game-over-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  color: #2c3e50;\\n  margin-bottom: 22px;\\n  font-size: 1.1rem;\\n}\\n\\n.game-over-content[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .game-over-content[_ngcontent-%COMP%]   .home[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  margin: 8px 0 0 0;\\n  width: 160px;\\n  padding: 12px 0;\\n  font-size: 1.1rem;\\n  border-radius: 8px;\\n  border: none;\\n  background: linear-gradient(90deg, #3498db 60%, #8e44ad 100%);\\n  color: #fff;\\n  font-weight: 600;\\n  box-shadow: 0 2px 8px rgba(52, 152, 219, 0.08);\\n  cursor: pointer;\\n  transition: transform 0.15s, box-shadow 0.15s, background 0.2s;\\n}\\n\\n.game-over-content[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, .game-over-content[_ngcontent-%COMP%]   .home[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background: linear-gradient(90deg, #8e44ad 60%, #3498db 100%);\\n  transform: scale(1.04);\\n  box-shadow: 0 4px 16px rgba(52, 152, 219, 0.18);\\n}\\n\\n@media (max-width: 600px) {\\n  .game-over-content[_ngcontent-%COMP%] {\\n    min-width: 0;\\n    width: 90vw;\\n    padding: 18px 4vw 12px 4vw;\\n  }\\n  .game-over-content[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .game-over-content[_ngcontent-%COMP%]   .home[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    width: 100%;\\n    font-size: 1rem;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  });\n}\nexport { BoardComponent };","map":{"version":3,"names":["CommonModule","CellComponent","RouterLink","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","BoardComponent_div_5_Template_button_click_6_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","resetGame","BoardComponent_div_6_Template_button_click_10_listener","_r8","ctx_r7","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","finalScore","ɵɵelement","ɵɵproperty","cell_r12","ctx_r11","isCarPosition","i_r10","j_r13","isPositionFound","getPositionColor","ɵɵtemplate","BoardComponent_div_9_app_cell_1_Template","row_r9","ɵɵstyleProp","ctx_r16","isLetterFound","word_r15","i_r18","wordColors","ɵɵclassProp","ɵɵtextInterpolate1","letter_r17","BoardComponent_div_14_span_2_Template","ctx_r3","split","ɵɵtextInterpolate2","getWordProgress","length","BoardComponent","gameService","steps","board","carPosition","row","col","wordsDifficulty","words","foundPositions","activeWordSequences","wordLetterStates","subscription","isMobileDevice","timer","timerInterval","timeLeft","isGameOver","keyboardLocked","showWinMenu","constructor","handleKeyDown","event","preventDefault","key","moveCar","onResize","checkDeviceType","window","innerWidth","ngOnInit","dificultad","localStorage","getItem","forEach","word","Array","fill","initializeBoard","getCarPosition","subscribe","position","checkForWordSequence","startTimer","ngOnDestroy","unsubscribe","clearInterval","rows","cols","i","j","randomLetter","String","fromCharCode","Math","floor","random","placeWordsRandomly","placeCarRandomly","occupiedPositions","Set","placed","attempts","maxAttempts","orientation","actualOrientation","tryPlaceWord","console","warn","startRowLimit","startColLimit","ceil","startRow","startCol","positions","placeWordAsGradient","directions","rowDir","colDir","posKey","has","push","add","direction","wordPositions","currentRow","currentCol","pos","updateCarPosition","currentLetter","alreadyFound","some","isComplete","continueWordSequences","letter","newSequences","sequence","nextLetterIndex","lastPos","rowDiff","abs","colDiff","updatedSequence","markWordAsFound","isAlreadyComplete","isWordComplete","letterIndex","color","every","w","calcularPuntaje","lockKeyboard","factor","found","foundPosition","find","undefined","count","newPos","setInterval","unlockKeyboard","countSteps","ɵɵdirectiveInject","i1","GameService","selectors","hostBindings","BoardComponent_HostBindings","rf","ctx","$event","ɵɵresolveWindow","BoardComponent_resize_HostBindingHandler","BoardComponent_div_5_Template","BoardComponent_div_6_Template","BoardComponent_div_9_Template","BoardComponent_div_14_Template","BoardComponent_Template_button_click_18_listener","BoardComponent_Template_button_click_21_listener","BoardComponent_Template_button_click_23_listener","BoardComponent_Template_button_click_27_listener","BoardComponent_Template_button_click_29_listener","BoardComponent_div_31_Template","i2","NgForOf","NgIf","styles"],"sources":["C:\\Users\\ETHAN PIERCE\\Desktop\\web\\P-Web\\src\\app\\board\\board.component.ts","C:\\Users\\ETHAN PIERCE\\Desktop\\web\\P-Web\\src\\app\\board\\board.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CellComponent } from '../cell/cell.component';\r\nimport { GameService } from '../game.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { RouterLink } from '@angular/router';\r\n\r\ninterface FoundPosition {\r\n  row: number;\r\n  col: number;\r\n  word: string;\r\n  letterIndex: number;\r\n  color: string;\r\n}\r\n\r\ninterface WordSequence {\r\n  word: string;\r\n  positions: { row: number, col: number }[];\r\n  isComplete: boolean;\r\n  \r\n}\r\n\r\n@Component({\r\n  selector: 'app-board',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    CellComponent,\r\n    RouterLink\r\n  ],\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.scss']\r\n  \r\n})\r\nexport class BoardComponent implements OnInit, OnDestroy {\r\n  //Pasos\r\n  steps: number = 0;\r\n  board: string[][] = [];\r\n  carPosition = { row: 0, col: 0 };\r\nwordsDifficulty: string[][] = [\r\n  //Fácil: conceptos básicos\r\n  ['CODE', 'JAVA', 'HTML', 'LOOP', 'BUG', 'NODE', 'CSS'],\r\n  //Normal: términos intermedios\r\n  ['OBJECT', 'ARRAY', 'PYTHON', 'CLASS', 'METHOD', 'STRING', 'BINARY'],\r\n  //Difícil: conceptos avanzados\r\n  ['RECURSION', 'ASYNC', 'PROMISE', 'ALGORITHM', 'COMPLEXITY', 'THREAD', 'MUTABLE']\r\n];\r\n  words: string[] = [];\r\n  foundPositions: FoundPosition[] = [];\r\n  activeWordSequences: WordSequence[] = [];\r\n  \r\n  // Colores para cada palabra encontrada\r\n wordColors: {[key: string]: string} = {\r\n  // Facil\r\n  'CODE': '#16a085',    // Verde azulado\r\n  'JAVA': '#f39c12',    // Amarillo anaranjado\r\n  'HTML': '#e67e22',    // Naranja quemado\r\n  'LOOP': '#2980b9',    // Azul intenso\r\n  'BUG': '#c0392b',     // Rojo oscuro\r\n  'NODE': '#27ae60',    // Verde bosque\r\n  'CSS': '#8e44ad',     // Morado\r\n\r\n  // Normal\r\n  'OBJECT': '#d35400',  // Naranja oscuro\r\n  'ARRAY': '#2980b9',   // Azul oscuro\r\n  'PYTHON': '#2ecc71',  // Verde brillante\r\n  'CLASS': '#9b59b6',   // Morado medio\r\n  'METHOD': '#34495e',  // Gris azulado\r\n  'STRING': '#e74c3c',  // Rojo fuerte\r\n  'BINARY': '#27ae60',  // Verde bosque\r\n\r\n  // Dificil\r\n  'RECURSION': '#c0392b',    // Rojo oscuro\r\n  'ASYNC': '#8e44ad',        // Morado oscuro\r\n  'PROMISE': '#2980b9',      // Azul intenso\r\n  'ALGORITHM': '#f39c12',    // Amarillo anaranjado\r\n  'COMPLEXITY': '#34495e',   // Gris azulado\r\n  'THREAD': '#16a085',       // Verde azulado\r\n  'MUTABLE': '#e67e22'       // Naranja quemado\r\n};\r\n  // Objeto para rastrear las letras encontradas de cada palabra\r\n  wordLetterStates: { [key: string]: boolean[] } = {};\r\n  private subscription: Subscription | null = null;\r\n\r\n  // Detectar dispositivo para adaptar el layout\r\n  isMobileDevice: boolean = false;\r\n\r\n  // Timer variables\r\n  timer: number = 0;\r\n  timerInterval: any = null;\r\n  timeLeft: number = 0;\r\n  isGameOver: boolean = false;\r\n  keyboardLocked: boolean = false;\r\n  showWinMenu: boolean = false; // Nuevo: mostrar menú de victoria\r\n  finalScore: number = 0; // Nuevo: puntaje final\r\n  \r\n  constructor(private gameService: GameService) { }\r\n  \r\n  @HostListener('window:keydown', ['$event'])\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    if (this.keyboardLocked || this.isGameOver) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    // Controlar el juego con las teclas de flecha\r\n    switch(event.key) {\r\n      case 'ArrowUp':\r\n        this.moveCar('up');\r\n        break;\r\n      case 'ArrowDown':\r\n        this.moveCar('down');\r\n        break;\r\n      case 'ArrowLeft':\r\n        this.moveCar('left');\r\n        break;\r\n      case 'ArrowRight':\r\n        this.moveCar('right');\r\n        break;\r\n    }\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize() {\r\n    this.checkDeviceType();\r\n  }\r\n\r\n  checkDeviceType() {\r\n    this.isMobileDevice = window.innerWidth <= 768;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const dificultad: string = localStorage.getItem('dificultad') ?? 'facil'; // Guardar dificultad por defecto\r\n    switch (dificultad) {\r\n  case 'facil':\r\n    this.words = [...this.wordsDifficulty[0]]; // Clonar para no mutar el original\r\n    break;\r\n  case 'medio':\r\n    this.words = [...this.wordsDifficulty[1]];\r\n    break;\r\n  case 'dificil':\r\n    this.words = [...this.wordsDifficulty[2]];\r\n    break;\r\n  default:\r\n    this.words = [...this.wordsDifficulty[0]]; // Siempre un fallback\r\n}\r\n    // Verificar el tipo de dispositivo\r\n    this.checkDeviceType();\r\n    \r\n    // Inicializar el estado de las letras encontradas para cada palabra\r\n    this.words.forEach(word => {\r\n      this.wordLetterStates[word] = Array(word.length).fill(false);\r\n    });\r\n    \r\n    // Inicializar el array de posiciones encontradas y secuencias de palabras\r\n    this.foundPositions = [];\r\n    this.activeWordSequences = [];\r\n    \r\n    // Inicializar el tablero con letras aleatorias y colocar las palabras\r\n    this.initializeBoard();\r\n    \r\n    // Suscribirse a los cambios de posición del carro\r\n    this.subscription = this.gameService.getCarPosition().subscribe(position => {\r\n      this.carPosition = position;\r\n      \r\n      // Verificar si la posición actual puede continuar una secuencia de palabra\r\n      this.checkForWordSequence();\r\n    });\r\n    \r\n    // Definir tiempo según dificultad\r\n    switch (dificultad) {\r\n      case 'facil':\r\n        this.timeLeft = 240; // 2 minutos\r\n        break;\r\n      case 'medio':\r\n        this.timeLeft = 180; // 1.5 minutos\r\n        break;\r\n      case 'dificil':\r\n        this.timeLeft = 120; // 1 minuto\r\n        break;\r\n      default:\r\n        this.timeLeft = 240;\r\n    }\r\n    this.isGameOver = false;\r\n    this.startTimer();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Limpiar la suscripción para evitar memory leaks\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    if (this.timerInterval) {\r\n      clearInterval(this.timerInterval);\r\n    }\r\n  }\r\n\r\n  // Inicializa el tablero con letras aleatorias y coloca las palabras\r\n  initializeBoard(): void {\r\n    // Crear un tablero de 10x10\r\n    const rows = localStorage.getItem('dificultad') === 'facil' ? 10 : localStorage.getItem('dificultad') === 'medio' ? 15 : 20;\r\n    const cols = localStorage.getItem('dificultad') === 'facil' ? 10 : localStorage.getItem('dificultad') === 'medio' ? 15 : 20;\r\n    \r\n    // Inicializar el tablero con letras aleatorias\r\n    this.board = [];\r\n    for (let i = 0; i < rows; i++) {\r\n      this.board[i] = [];\r\n      for (let j = 0; j < cols; j++) {\r\n        // Generar letra aleatoria (A-Z)\r\n        const randomLetter = String.fromCharCode(65 + Math.floor(Math.random() * 26));\r\n        this.board[i][j] = randomLetter;\r\n      }\r\n    }\r\n    \r\n    // Colocar las palabras en el tablero de forma aleatoria\r\n    this.placeWordsRandomly();\r\n    \r\n    // Colocar el auto en una posición aleatoria que no contenga una letra de palabra\r\n    this.placeCarRandomly();\r\n  }\r\n\r\n  // Coloca las palabras en el tablero aleatoriamente con diferentes orientaciones permitidas\r\n  placeWordsRandomly(): void {\r\n    // Mapa para rastrear las posiciones ocupadas\r\n    const occupiedPositions = new Set<string>();\r\n    \r\n    // Colocar cada palabra\r\n    for (const word of this.words) {\r\n      let placed = false;\r\n      let attempts = 0;\r\n      const maxAttempts = 100; // Límite de intentos por palabra\r\n      \r\n      while (!placed && attempts < maxAttempts) {\r\n        attempts++;\r\n        \r\n        // Elegir una orientación aleatoria: 0=horizontal, 1=vertical, 4=diagonal (tipo grada)\r\n        const orientation = Math.floor(Math.random() * 3);\r\n        const actualOrientation = orientation === 2 ? 4 : orientation; // Si es 2, usamos la diagonal (4)\r\n        \r\n        // Intentar colocar la palabra con la orientación elegida\r\n        placed = this.tryPlaceWord(word, actualOrientation, occupiedPositions);\r\n      }\r\n      \r\n      if (!placed) {\r\n        console.warn(`No se pudo colocar la palabra: ${word}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Intenta colocar una palabra en el tablero con la orientación especificada\r\n  tryPlaceWord(word: string, orientation: number, occupiedPositions: Set<string>): boolean {\r\n    const rows = this.board.length;\r\n    const cols = this.board[0].length;\r\n    \r\n    // Determinar límites para la posición inicial según la orientación\r\n    let startRowLimit = rows;\r\n    let startColLimit = cols;\r\n    \r\n    switch (orientation) {\r\n      case 0: // Horizontal\r\n        startColLimit = cols - word.length + 1;\r\n        break;\r\n      case 1: // Vertical\r\n        startRowLimit = rows - word.length + 1;\r\n        break;\r\n      case 4: // Diagonal (tipo grada)\r\n        startRowLimit = rows - Math.ceil(word.length / 2);\r\n        startColLimit = cols - Math.ceil(word.length / 2);\r\n        break;\r\n    }\r\n    \r\n    // Si no hay espacio suficiente, regresar falso\r\n    if (startRowLimit <= 0 || startColLimit <= 0) {\r\n      return false;\r\n    }\r\n    \r\n    // Elegir una posición inicial aleatoria\r\n    const startRow = Math.floor(Math.random() * startRowLimit);\r\n    const startCol = Math.floor(Math.random() * startColLimit);\r\n    \r\n    // Verificar si la palabra cabe en la orientación seleccionada\r\n    const positions: [number, number][] = [];\r\n    \r\n    if (orientation === 4) { // Diagonal tipo grada\r\n      return this.placeWordAsGradient(word, startRow, startCol, occupiedPositions);\r\n    } else {\r\n      // Direcciones para las orientaciones 0-1\r\n      const directions = [\r\n        [0, 1],  // Horizontal\r\n        [1, 0],  // Vertical\r\n      ];\r\n      \r\n      const [rowDir, colDir] = directions[orientation];\r\n      \r\n      // Verificar si la palabra cabe sin superponerse con otras\r\n      for (let i = 0; i < word.length; i++) {\r\n        const row = startRow + i * rowDir;\r\n        const col = startCol + i * colDir;\r\n        \r\n        // Verificar si está dentro del tablero\r\n        if (row < 0 || row >= rows || col < 0 || col >= cols) {\r\n          return false;\r\n        }\r\n        \r\n        // Verificar si la posición ya está ocupada por otra letra\r\n        const posKey = `${row},${col}`;\r\n        if (occupiedPositions.has(posKey) && this.board[row][col] !== word[i]) {\r\n          return false;\r\n        }\r\n        \r\n        positions.push([row, col]);\r\n      }\r\n      \r\n      // Colocar la palabra en el tablero\r\n      for (let i = 0; i < word.length; i++) {\r\n        const [row, col] = positions[i];\r\n        this.board[row][col] = word[i];\r\n        occupiedPositions.add(`${row},${col}`);\r\n      }\r\n      \r\n      return true;\r\n    }\r\n  }\r\n\r\n  // Coloca una palabra en forma de grada - diagonal organizada\r\n  placeWordAsGradient(word: string, startRow: number, startCol: number, occupiedPositions: Set<string>): boolean {\r\n    const rows = this.board.length;\r\n    const cols = this.board[0].length;\r\n    \r\n    // Elegir dirección de la grada: 0=diagonal↘, 1=diagonal↗\r\n    const direction = Math.floor(Math.random() * 2);\r\n    \r\n    // Posiciones para esta palabra\r\n    const wordPositions: [number, number][] = [];\r\n    \r\n    // Intentar colocar cada letra de la palabra\r\n    for (let i = 0; i < word.length; i++) {\r\n      let currentRow, currentCol;\r\n      \r\n      if (direction === 0) { // Diagonal hacia abajo-derecha\r\n        currentRow = startRow + i;\r\n        currentCol = startCol + i;\r\n      } else { // Diagonal hacia arriba-derecha\r\n        currentRow = startRow - i;\r\n        currentCol = startCol + i;\r\n      }\r\n      \r\n      // Verificar si la posición está fuera del tablero\r\n      if (currentRow < 0 || currentRow >= rows || currentCol < 0 || currentCol >= cols) {\r\n        return false;\r\n      }\r\n      \r\n      // Verificar si la posición está ocupada\r\n      const posKey = `${currentRow},${currentCol}`;\r\n      if (occupiedPositions.has(posKey) && this.board[currentRow][currentCol] !== word[i]) {\r\n        return false;\r\n      }\r\n      \r\n      wordPositions.push([currentRow, currentCol]);\r\n    }\r\n    \r\n    // Colocar la palabra en el tablero\r\n    for (let i = 0; i < word.length; i++) {\r\n      const [row, col] = wordPositions[i];\r\n      this.board[row][col] = word[i];\r\n      occupiedPositions.add(`${row},${col}`);\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n  // Coloca el auto en una posición aleatoria que no contenga una letra de palabra\r\n  placeCarRandomly(): void {\r\n    const rows = this.board.length;\r\n    const cols = this.board[0].length;\r\n    \r\n    // Crear un conjunto de posiciones ocupadas por palabras\r\n    const wordPositions = new Set<string>();\r\n    this.foundPositions.forEach(pos => {\r\n      wordPositions.add(`${pos.row},${pos.col}`);\r\n    });\r\n    \r\n    // Intentar encontrar una posición aleatoria no ocupada\r\n    let placed = false;\r\n    let attempts = 0;\r\n    const maxAttempts = 100;\r\n    \r\n    while (!placed && attempts < maxAttempts) {\r\n      const row = Math.floor(Math.random() * rows);\r\n      const col = Math.floor(Math.random() * cols);\r\n      \r\n      // Verificar si no es parte de una palabra\r\n      if (!wordPositions.has(`${row},${col}`)) {\r\n        this.carPosition = { row, col };\r\n        this.gameService.updateCarPosition(row, col);\r\n        placed = true;\r\n      }\r\n      \r\n      attempts++;\r\n    }\r\n    \r\n    // Si no se encontró una posición libre, usar la posición (0,0)\r\n    if (!placed) {\r\n      this.carPosition = { row: 0, col: 0 };\r\n      this.gameService.updateCarPosition(0, 0);\r\n    }\r\n  }\r\n\r\n  // VERSIÓN MEJORADA: Verificar si la posición actual puede iniciar o continuar una secuencia de palabra\r\n  checkForWordSequence(): void {\r\n    const currentRow = this.carPosition.row;\r\n    const currentCol = this.carPosition.col;\r\n    const currentLetter = this.board[currentRow][currentCol];\r\n    \r\n    // Para cada palabra, comprobamos si se puede iniciar una nueva secuencia\r\n    for (const word of this.words) {\r\n      // Si la letra actual coincide con la primera letra de la palabra\r\n      if (word[0] === currentLetter) {\r\n        // Verificar si esta posición ya es parte de una secuencia encontrada\r\n        const alreadyFound = this.foundPositions.some(pos => \r\n          pos.row === currentRow && pos.col === currentCol);\r\n          \r\n        if (!alreadyFound) {\r\n          // Iniciar una nueva secuencia potencial\r\n          this.activeWordSequences.push({\r\n            word: word,\r\n            positions: [{ row: currentRow, col: currentCol }],\r\n            isComplete: false\r\n          });\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Comprobamos si la letra actual continúa alguna secuencia activa\r\n    this.continueWordSequences(currentRow, currentCol, currentLetter);\r\n  }\r\n  \r\n  // Verificar si la posición actual continúa alguna secuencia activa\r\n  continueWordSequences(row: number, col: number, letter: string): void {\r\n    const newSequences: WordSequence[] = [];\r\n    \r\n    // Para cada secuencia activa\r\n    for (const sequence of this.activeWordSequences) {\r\n      if (sequence.isComplete) {\r\n        newSequences.push(sequence);\r\n        continue;\r\n      }\r\n      \r\n      const word = sequence.word;\r\n      const nextLetterIndex = sequence.positions.length;\r\n      \r\n      // Si ya hemos encontrado toda la palabra, continuamos\r\n      if (nextLetterIndex >= word.length) {\r\n        continue;\r\n      }\r\n      \r\n      // Si la letra actual coincide con la siguiente letra esperada\r\n      if (word[nextLetterIndex] === letter) {\r\n        // La última posición en la secuencia\r\n        const lastPos = sequence.positions[sequence.positions.length - 1];\r\n        \r\n        // Comprobar si la posición actual es adyacente a la última\r\n        const rowDiff = Math.abs(row - lastPos.row);\r\n        const colDiff = Math.abs(col - lastPos.col);\r\n        \r\n        // Si la posición actual es adyacente a la última posición\r\n        if ((rowDiff <= 1 && colDiff <= 1) && (rowDiff + colDiff > 0)) {\r\n          // Crear una copia de la secuencia y añadir la nueva posición\r\n          const updatedSequence = {\r\n            word: sequence.word,\r\n            positions: [...sequence.positions, { row, col }],\r\n            isComplete: nextLetterIndex + 1 === word.length\r\n          };\r\n          \r\n          // Si hemos completado la palabra\r\n          if (updatedSequence.isComplete) {\r\n            // Marcar las letras como encontradas\r\n            this.markWordAsFound(updatedSequence);\r\n          }\r\n          \r\n          newSequences.push(updatedSequence);\r\n        } else {\r\n          // Si no es adyacente, mantenemos la secuencia original\r\n          newSequences.push(sequence);\r\n        }\r\n      } else {\r\n        // Si la letra no coincide, mantenemos la secuencia original\r\n        newSequences.push(sequence);\r\n      }\r\n    }\r\n    \r\n    this.activeWordSequences = newSequences;\r\n  }\r\n  \r\n  // Marcar una palabra como encontrada\r\n  markWordAsFound(sequence: WordSequence): void {\r\n    const word = sequence.word;\r\n    \r\n    // Verificar si esta palabra ya ha sido completamente encontrada\r\n    const isAlreadyComplete = this.isWordComplete(word);\r\n    if (isAlreadyComplete) {\r\n      return;\r\n    }\r\n    \r\n    // Marcar todas las letras de la palabra como encontradas\r\n    for (let i = 0; i < sequence.positions.length; i++) {\r\n      const pos = sequence.positions[i];\r\n      \r\n      // Actualizar el estado de las letras encontradas\r\n      this.wordLetterStates[word][i] = true;\r\n      \r\n      // Añadir a las posiciones encontradas\r\n      this.foundPositions.push({\r\n        row: pos.row,\r\n        col: pos.col,\r\n        word: word,\r\n        letterIndex: i,\r\n        color: this.wordColors[word]\r\n      });\r\n    }\r\n    // Si ya se encontraron todas las palabras, mostrar menú de victoria\r\n    if (this.words.every(w => this.isWordComplete(w))) {\r\n      this.finalScore = this.calcularPuntaje();\r\n      this.showWinMenu = true;\r\n      this.lockKeyboard();\r\n      this.isGameOver = true;\r\n      if (this.timerInterval) clearInterval(this.timerInterval);\r\n    }\r\n  }\r\n\r\n  // Nuevo: calcular puntaje\r\n  calcularPuntaje(): number {\r\n    // Ejemplo: más puntos por tiempo restante y menos pasos\r\n   const dificultad = localStorage.getItem('dificultad') || 'medio';\r\n\r\n    const factor = dificultad === 'facil' ? 0.7 \r\n              : dificultad === 'medio' ? 0.5 \r\n              : 0.3;\r\n    return (this.timeLeft * factor) - this.steps;\r\n  }\r\n\r\n  // Comprobar si una palabra está completamente encontrada\r\n  isWordComplete(word: string): boolean {\r\n    if (!this.wordLetterStates[word]) {\r\n      return false;\r\n    }\r\n    \r\n    return this.wordLetterStates[word].every(found => found);\r\n  }\r\n\r\n  isCarPosition(i: number, j: number): boolean {\r\n    return this.carPosition.row === i && this.carPosition.col === j;\r\n  }\r\n\r\n  getPositionColor(i: number, j: number): string | undefined {\r\n    const foundPosition = this.foundPositions.find(pos => pos.row === i && pos.col === j);\r\n    return foundPosition ? foundPosition.color : undefined;\r\n  }\r\n\r\n  isPositionFound(i: number, j: number): boolean {\r\n    // Verificar si esta posición específica está en la lista de posiciones encontradas\r\n    return this.foundPositions.some(pos => pos.row === i && pos.col === j);\r\n  }\r\n\r\n  isLetterFound(word: string, letterIndex: number): boolean {\r\n    return this.wordLetterStates[word][letterIndex];\r\n  }\r\n\r\n  getWordProgress(word: string): number {\r\n    // Contar cuántas letras se han encontrado de esta palabra\r\n    let count = 0;\r\n    for (let i = 0; i < word.length; i++) {\r\n      if (this.wordLetterStates[word][i]) {\r\n        count++;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n  moveCar(direction: 'up'|'down'|'left'|'right'): void {\r\n    const newPos = { ...this.carPosition };\r\n    \r\n    switch (direction) {\r\n      case 'up':    \r\n        if (newPos.row > 0) newPos.row--;\r\n        this.steps++;\r\n        break;\r\n      case 'down':  \r\n        if (newPos.row < this.board.length - 1) newPos.row++;\r\n        this.steps++;\r\n        break;\r\n      case 'left':  \r\n        if (newPos.col > 0) newPos.col--;\r\n        this.steps++;\r\n        break;\r\n      case 'right':\r\n        if (newPos.col < this.board[0].length - 1) newPos.col++;\r\n        this.steps++;\r\n        break;\r\n    }\r\n    \r\n    this.gameService.updateCarPosition(newPos.row, newPos.col);\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timerInterval) {\r\n      clearInterval(this.timerInterval);\r\n    }\r\n    this.timerInterval = setInterval(() => {\r\n      if (this.timeLeft > 0) {\r\n        this.timeLeft--;\r\n      } else {\r\n        this.isGameOver = true;\r\n        clearInterval(this.timerInterval);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  resetGame(): void {\r\n    // Reiniciar el juego\r\n    this.initializeBoard();\r\n    this.foundPositions = [];\r\n    this.activeWordSequences = [];\r\n    \r\n    // Reiniciar el estado de las letras encontradas\r\n    this.words.forEach(word => {\r\n      this.wordLetterStates[word] = Array(word.length).fill(false);\r\n    });\r\n    \r\n    // Colocar el auto en una nueva posición aleatoria\r\n    this.placeCarRandomly();\r\n    this.steps = 0;\r\n    this.isGameOver = false;\r\n    this.showWinMenu = false;\r\n    this.finalScore = 0;\r\n    this.unlockKeyboard();\r\n    // Reiniciar el temporizador\r\n    const dificultad: string = localStorage.getItem('dificultad') ?? 'facil';\r\n    switch (dificultad) {\r\n      case 'facil':\r\n        this.timeLeft = 240;\r\n        break;\r\n      case 'medio':\r\n        this.timeLeft = 180; \r\n        break;\r\n      case 'dificil':\r\n        this.timeLeft = 120;\r\n        break;\r\n      default:\r\n        this.timeLeft = 240;\r\n    }\r\n    this.startTimer();\r\n  }\r\n\r\n  // Método para bloquear el teclado\r\n  lockKeyboard() {\r\n    this.keyboardLocked = true;\r\n  }\r\n\r\n  // Método para desbloquear el teclado\r\n  unlockKeyboard() {\r\n    this.keyboardLocked = false;\r\n  }\r\n\r\n  countSteps(): number {\r\n    // Contar los pasos desde la posición inicial del carro hasta la actual\r\n    \r\n    return Math.abs(this.carPosition.row) + Math.abs(this.carPosition.col);\r\n  }\r\n\r\n\r\n}","<div class=\"game-container\">\r\n    <h2>Juego \"Sopa de Letras\"</h2>\r\n    <!-- Temporizador -->\r\n    <div class=\"timer\" [class.game-over]=\"isGameOver\">\r\n        ⏰ Tiempo restante: {{ timeLeft }}s\r\n    </div>\r\n    <div *ngIf=\"isGameOver && !showWinMenu\" class=\"game-over-modal\">\r\n        <div class=\"game-over-content\">\r\n            <h2>¡Game Over!</h2>\r\n            <p>Se acabó el tiempo.</p>\r\n            <button (click)=\"resetGame()\">Reiniciar</button>\r\n            <a class=\"home\" routerLink=\"/\" routerLinkActive=\"router-link-active\"><button>HOME</button></a>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"showWinMenu\" class=\"game-over-modal\">\r\n        <div class=\"game-over-content\">\r\n            <h2>¡Felicidades!</h2>\r\n            <p>¡Encontraste todas las palabras!</p>\r\n            <p>Puntaje final: <b>{{ finalScore }}</b></p>\r\n            <button (click)=\"resetGame()\">Jugar de nuevo</button>\r\n            <a class=\"home\" routerLink=\"/\" routerLinkActive=\"router-link-active\"><button>HOME</button></a>\r\n        </div>\r\n    </div>\r\n    <div class=\"game-layout\" [class.mobile-layout]=\"isMobileDevice\" [class.desktop-layout]=\"!isMobileDevice\">\r\n        <!-- Tablero del juego -->\r\n        <!-- BOTON DE HOME Y RESET-->\r\n\r\n        <div class=\"board\">\r\n            <div class=\"row\" *ngFor=\"let row of board; let i = index\">\r\n                <app-cell *ngFor=\"let cell of row; let j = index\" [value]=\"cell\" [isCarPosition]=\"isCarPosition(i, j)\" [isFound]=\"isPositionFound(i, j)\" [foundColor]=\"getPositionColor(i, j)\"></app-cell>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Panel lateral/inferior de palabras a encontrar -->\r\n        <div class=\"target-words\">\r\n            <h3>Palabras a encontrar:</h3>\r\n            <div class=\"words-container\">\r\n                <div class=\"word-item\" *ngFor=\"let word of words\" [style.border-color]=\"wordColors[word]\">\r\n                    <div class=\"letters\">\r\n                        <span *ngFor=\"let letter of word.split(''); let i = index\" [class.found]=\"isLetterFound(word, i)\" [style.background-color]=\"isLetterFound(word, i) ? wordColors[word] : ''\">\r\n              {{ letter }}\r\n            </span>\r\n                    </div>\r\n                    <div class=\"progress\">\r\n                        {{ getWordProgress(word) }} de {{ word.length }} letras\r\n                    </div>\r\n                </div>\r\n                <a class=\"home\" routerLink=\"/\" routerLinkActive=\"router-link-active\"><button>HOME</button></a>\r\n                <button class=\"reset\" type=\"button\" (click)=\"resetGame()\">RESET</button>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Controles de movimiento -->\r\n    <div class=\"controls\">\r\n        <button type=\"button\" class=\"btn-up\" (click)=\"moveCar('up')\">↑</button>\r\n        <button type=\"button\" class=\"btn-left\" (click)=\"moveCar('left')\">←</button>\r\n        <button type=\"button\" class=\"btn-step\">Step {{ steps }}</button>\r\n        <button type=\"button\" class=\"btn-right\" (click)=\"moveCar('right')\">→</button>\r\n        <button type=\"button\" class=\"btn-down\" (click)=\"moveCar('down')\">↓</button>\r\n\r\n    </div>\r\n\r\n    <!-- Instrucciones para teclado -->\r\n    <div class=\"keyboard-instructions\" *ngIf=\"!isMobileDevice\">\r\n\r\n        <p>También puedes usar las flechas de tu teclado para moverte</p>\r\n    </div>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}