{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ETHAN PIERCE/Desktop/web/P-Web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { CellComponent } from '../cell/cell.component'; // Asegúrate que la ruta sea correcta y CellComponent sea standalone\nimport { Subscription } from 'rxjs';\nimport { RouterLink } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../game.service\";\nimport * as i2 from \"../services/question.service\";\nimport * as i3 from \"@angular/common\";\nfunction BoardComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"h2\");\n    i0.ɵɵtext(3, \"\\u00A1Game Over!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"Se acab\\u00F3 el tiempo.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_5_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.resetGame());\n    });\n    i0.ɵɵtext(7, \"Reiniciar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"a\", 13)(9, \"button\");\n    i0.ɵɵtext(10, \"HOME\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction BoardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"h2\");\n    i0.ɵɵtext(3, \"\\u00A1Felicidades!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"\\u00A1Encontraste todas las respuestas!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7, \"Puntaje final: \");\n    i0.ɵɵelementStart(8, \"b\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_6_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.resetGame());\n    });\n    i0.ɵɵtext(11, \"Jugar de nuevo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"a\", 13)(13, \"button\");\n    i0.ɵɵtext(14, \"HOME\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(ctx_r1.finalScore);\n  }\n}\nfunction BoardComponent_div_8_div_1_app_cell_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-cell\", 18);\n  }\n  if (rf & 2) {\n    const cell_r16 = ctx.$implicit;\n    const j_r17 = ctx.index;\n    const i_r14 = i0.ɵɵnextContext().index;\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", cell_r16)(\"isCarPosition\", ctx_r15.isCarPosition(i_r14, j_r17))(\"isFound\", ctx_r15.isPositionFound(i_r14, j_r17))(\"foundColor\", ctx_r15.getPositionColor(i_r14, j_r17));\n  }\n}\nfunction BoardComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, BoardComponent_div_8_div_1_app_cell_1_Template, 1, 4, \"app-cell\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r13);\n  }\n}\nfunction BoardComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, BoardComponent_div_8_div_1_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.board);\n  }\n}\nfunction BoardComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Cargando tablero... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BoardComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"p\");\n    i0.ɵɵtext(2, \"No hay preguntas disponibles para esta dificultad.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Por favor, ve al \");\n    i0.ɵɵelementStart(5, \"a\", 21);\n    i0.ɵɵtext(6, \"Panel de Administrador\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \" para agregar algunas.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction BoardComponent_div_11_div_4_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const letter_r22 = ctx.$implicit;\n    const i_r23 = ctx.index;\n    const question_r20 = i0.ɵɵnextContext().$implicit;\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"background-color\", ctx_r21.isQuestionLetterFound(question_r20.id, i_r23) ? ctx_r21.answerColors[question_r20.id] : \"\");\n    i0.ɵɵclassProp(\"found\", ctx_r21.isQuestionLetterFound(question_r20.id, i_r23));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", letter_r22, \" \");\n  }\n}\nfunction BoardComponent_div_11_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"div\", 28)(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 29);\n    i0.ɵɵtemplate(5, BoardComponent_div_11_div_4_span_5_Template, 2, 5, \"span\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 31);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r20 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"border-left-color\", ctx_r19.answerColors[question_r20.id]);\n    i0.ɵɵclassProp(\"question-found\", question_r20.isFound);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(question_r20.question);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", question_r20.answer.split(\"\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r19.getQuestionProgress(question_r20.id).found, \" de \", ctx_r19.getQuestionProgress(question_r20.id).total, \" letras \");\n  }\n}\nfunction BoardComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"h3\");\n    i0.ɵɵtext(2, \"Encuentra las Respuestas a estas Preguntas:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 23);\n    i0.ɵɵtemplate(4, BoardComponent_div_11_div_4_Template, 8, 8, \"div\", 24);\n    i0.ɵɵelementStart(5, \"div\", 25)(6, \"a\", 13)(7, \"button\");\n    i0.ɵɵtext(8, \"HOME\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_11_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.resetGame());\n    });\n    i0.ɵɵtext(10, \"REINICIAR\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.currentQuestions);\n  }\n}\nfunction BoardComponent_div_12_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 44);\n    i0.ɵɵtext(1, \"Selecciona movimientos...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BoardComponent_div_12_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 45);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"titlecase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const move_r30 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", \"move-\" + move_r30);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 2, move_r30));\n  }\n}\nfunction BoardComponent_div_12_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_12_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r32.clearMoveSequence());\n    });\n    i0.ɵɵtext(1, \"\\u2715\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BoardComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"div\", 33)(2, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_12_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.addMove(\"up\"));\n    });\n    i0.ɵɵtext(3, \"\\u2191\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_12_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.addMove(\"left\"));\n    });\n    i0.ɵɵtext(5, \"\\u2190\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_12_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.addMove(\"right\"));\n    });\n    i0.ɵɵtext(7, \"\\u2192\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_12_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.addMove(\"down\"));\n    });\n    i0.ɵɵtext(9, \"\\u2193\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 38);\n    i0.ɵɵtemplate(11, BoardComponent_div_12_span_11_Template, 2, 0, \"span\", 39);\n    i0.ɵɵtemplate(12, BoardComponent_div_12_ng_container_12_Template, 4, 4, \"ng-container\", 40);\n    i0.ɵɵtemplate(13, BoardComponent_div_12_button_13_Template, 2, 0, \"button\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 42);\n    i0.ɵɵlistener(\"click\", function BoardComponent_div_12_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.sendMoveSequence());\n    });\n    i0.ɵɵtext(15, \"Enviar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 43);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.moveSequence.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.moveSequence);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.moveSequence.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r6.moveSequence.length === 0);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Pasos: \", ctx_r6.steps, \"\");\n  }\n}\nfunction BoardComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47)(1, \"p\");\n    i0.ɵɵtext(2, \"Usa las flechas del teclado para moverte.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nclass BoardComponent {\n  gameService;\n  questionService;\n  cdr;\n  steps = 10; // Cambia el valor inicial según el tope de movimientos deseado\n  board = [];\n  carPosition = {\n    row: 0,\n    col: 0\n  };\n  currentQuestions = [];\n  foundPositions = [];\n  activeAnswerSequences = [];\n  answerColors = {};\n  subscriptions = new Subscription();\n  isMobileDevice = false;\n  timeLeft = 0;\n  timerInterval = null;\n  isGameOver = false;\n  keyboardLocked = false;\n  showWinMenu = false;\n  finalScore = 0;\n  gameDifficulty = 'facil';\n  moveSequence = [];\n  constructor(gameService, questionService,\n  // Asegúrate que QuestionService esté bien importado y proveído (e.g. providedIn: 'root')\n  cdr) {\n    this.gameService = gameService;\n    this.questionService = questionService;\n    this.cdr = cdr;\n  }\n  handleKeyDown(event) {\n    if (this.keyboardLocked || this.isGameOver) {\n      event.preventDefault();\n      return;\n    }\n    switch (event.key) {\n      case 'ArrowUp':\n        this.moveCar('up');\n        break;\n      case 'ArrowDown':\n        this.moveCar('down');\n        break;\n      case 'ArrowLeft':\n        this.moveCar('left');\n        break;\n      case 'ArrowRight':\n        this.moveCar('right');\n        break;\n    }\n  }\n  onResize() {\n    this.checkDeviceType();\n  }\n  checkDeviceType() {\n    this.isMobileDevice = window.innerWidth <= 768;\n  }\n  ngOnInit() {\n    this.checkDeviceType();\n    const storedDifficulty = localStorage.getItem('dificultad');\n    this.gameDifficulty = storedDifficulty || 'facil';\n    this.questionService.loadGameQuestions(this.gameDifficulty);\n    const questionsSub = this.questionService.getCurrentQuestions().subscribe(questions => {\n      this.currentQuestions = questions;\n      if (questions.length > 0) {\n        this.initializeGame();\n      } else {\n        console.warn(`No hay preguntas para la dificultad: ${this.gameDifficulty}`);\n        this.board = []; // Limpiar el tablero si no hay preguntas\n      }\n\n      this.cdr.detectChanges();\n    });\n    this.subscriptions.add(questionsSub);\n    // Solo suscribe a carPosition si GameService se usa activamente para la lógica del juego\n    const carPosSub = this.gameService.getCarPosition().subscribe(position => {\n      this.carPosition = position;\n      if (this.currentQuestions.length > 0 && this.board.length > 0) {\n        // Solo verificar si el juego está activo\n        this.checkForAnswerSequence();\n      }\n    });\n    this.subscriptions.add(carPosSub);\n  }\n  initializeGame() {\n    this.foundPositions = [];\n    this.activeAnswerSequences = [];\n    this.assignAnswerColors();\n    this.initializeBoard();\n    this.resetTimer(); // Mover antes de startTimer\n    this.isGameOver = false;\n    this.showWinMenu = false;\n    this.finalScore = 0;\n    this.steps = 0;\n    this.unlockKeyboard();\n    this.startTimer(); // Iniciar temporizador después de resetear\n  }\n\n  resetTimer() {\n    switch (this.gameDifficulty) {\n      case 'facil':\n        this.timeLeft = 240;\n        break;\n      case 'medio':\n        this.timeLeft = 180;\n        break;\n      case 'dificil':\n        this.timeLeft = 120;\n        break;\n      default:\n        this.timeLeft = 240;\n    }\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n    }\n  }\n  assignAnswerColors() {\n    const colors = ['#16a085', '#f39c12', '#e67e22', '#2980b9', '#c0392b', '#27ae60', '#8e44ad', '#d35400', '#2ecc71', '#9b59b6', '#34495e', '#e74c3c'];\n    this.currentQuestions.forEach((question, index) => {\n      this.answerColors[question.id] = colors[index % colors.length];\n    });\n  }\n  initializeBoard() {\n    const answers = this.currentQuestions.map(q => q.answer.toUpperCase()); // Asegurar mayúsculas\n    if (answers.length === 0) {\n      this.board = []; // Tablero vacío\n      console.warn(\"No hay respuestas para colocar en el tablero.\");\n      return;\n    }\n    const difficulty = this.gameDifficulty;\n    const rows = difficulty === 'facil' ? 10 : difficulty === 'medio' ? 15 : 20;\n    const cols = difficulty === 'facil' ? 10 : difficulty === 'medio' ? 15 : 20;\n    this.board = Array(rows).fill(null).map(() => Array(cols).fill(''));\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        this.board[i][j] = String.fromCharCode(65 + Math.floor(Math.random() * 26)); // Letras A-Z\n      }\n    }\n\n    this.placeAnswersRandomly(answers);\n    this.placeCarRandomly();\n  }\n  placeAnswersRandomly(answers) {\n    const occupiedPositions = new Set();\n    for (const answer of answers) {\n      if (!answer) continue; // Saltar si la respuesta es undefined o vacía\n      let placed = false;\n      let attempts = 0;\n      const maxAttempts = 100;\n      while (!placed && attempts < maxAttempts) {\n        attempts++;\n        const orientation = Math.floor(Math.random() * 3); // 0:H, 1:V, 2:D (simplificada)\n        placed = this.tryPlaceAnswer(answer, orientation, occupiedPositions);\n      }\n      if (!placed) {\n        console.warn(`No se pudo colocar la respuesta: ${answer}`);\n      }\n    }\n  }\n  tryPlaceAnswer(answer, orientation, occupiedPositions) {\n    const rows = this.board.length;\n    const cols = this.board[0].length;\n    let startRowLimit = rows;\n    let startColLimit = cols;\n    switch (orientation) {\n      case 0:\n        startColLimit = cols - answer.length + 1;\n        break;\n      case 1:\n        startRowLimit = rows - answer.length + 1;\n        break;\n      case 2:\n        // Diagonal simple (arriba-izquierda a abajo-derecha)\n        startRowLimit = rows - answer.length + 1;\n        startColLimit = cols - answer.length + 1;\n        break;\n    }\n    if (startRowLimit <= 0 || startColLimit <= 0) return false;\n    const startRow = Math.floor(Math.random() * startRowLimit);\n    const startCol = Math.floor(Math.random() * startColLimit);\n    const positions = [];\n    let possible = true;\n    for (let i = 0; i < answer.length; i++) {\n      let r = startRow,\n        c = startCol;\n      if (orientation === 0) c += i;else if (orientation === 1) r += i;else {\n        r += i;\n        c += i;\n      }\n      if (r < 0 || r >= rows || c < 0 || c >= cols) {\n        possible = false;\n        break;\n      }\n      const posKey = `${r},${c}`;\n      if (occupiedPositions.has(posKey) && this.board[r][c] !== answer[i]) {\n        possible = false;\n        break;\n      }\n      positions.push([r, c]);\n    }\n    if (possible) {\n      positions.forEach(([r, c], i) => {\n        this.board[r][c] = answer[i];\n        occupiedPositions.add(`${r},${c}`);\n      });\n      return true;\n    }\n    return false;\n  }\n  placeCarRandomly() {\n    const rows = this.board.length;\n    const cols = this.board[0].length;\n    if (rows === 0 || cols === 0) return;\n    let r, c;\n    let attempts = 0;\n    const maxAttempts = rows * cols; // Evitar bucle infinito si el tablero está lleno\n    do {\n      r = Math.floor(Math.random() * rows);\n      c = Math.floor(Math.random() * cols);\n      attempts++;\n      if (attempts > maxAttempts) {\n        // Fallback si no se encuentra posición libre\n        r = 0;\n        c = 0;\n        break;\n      }\n    } while (this.isPositionPartOfAnyAnswer(r, c));\n    r = 0;\n    c = 0; // Asegurarse de que el carro comienza en la esquina superior izquierda\n    this.carPosition = {\n      row: r,\n      col: c\n    };\n    this.gameService.updateCarPosition(r, c);\n  }\n  isPositionPartOfAnyAnswer(row, col) {\n    // Esta función es una simplificación. Para ser preciso, necesitarías\n    // almacenar las coordenadas exactas de cada respuesta colocada.\n    // Por ahora, verifica si la letra en la celda es parte de alguna respuesta.\n    if (!this.board[row] || !this.board[row][col]) return false;\n    const letterInCell = this.board[row][col];\n    return this.currentQuestions.some(q => q.answer.includes(letterInCell));\n  }\n  checkForAnswerSequence() {\n    if (this.isGameOver || !this.board.length) return;\n    const currentRow = this.carPosition.row;\n    const currentCol = this.carPosition.col;\n    // Asegurarse de que la posición del carro es válida\n    if (currentRow < 0 || currentRow >= this.board.length || currentCol < 0 || currentCol >= this.board[0].length) {\n      return;\n    }\n    const currentLetter = this.board[currentRow][currentCol];\n    for (const question of this.currentQuestions) {\n      if (question.isFound || !question.answer) continue;\n      if (question.answer[0] === currentLetter) {\n        const isPartOfExistingActiveSequence = this.activeAnswerSequences.some(seq => seq.answerId === question.id && seq.positions.some(p => p.row === currentRow && p.col === currentCol));\n        if (isPartOfExistingActiveSequence) continue;\n        const alreadyFoundInFoundPositions = this.foundPositions.some(pos => pos.row === currentRow && pos.col === currentCol && pos.answerId === question.id && pos.letterIndex === 0);\n        if (!alreadyFoundInFoundPositions) {\n          // Iniciar nueva secuencia\n          this.activeAnswerSequences.push({\n            answerId: question.id,\n            answerText: question.answer,\n            positions: [{\n              row: currentRow,\n              col: currentCol\n            }],\n            isComplete: question.answer.length === 1 // Completa si la respuesta es de 1 letra\n          });\n\n          if (question.answer.length === 1) {\n            this.markAnswerAsFound(this.activeAnswerSequences[this.activeAnswerSequences.length - 1]);\n          }\n        }\n      }\n    }\n    this.continueAnswerSequences(currentRow, currentCol, currentLetter);\n    this.activeAnswerSequences = this.activeAnswerSequences.filter(seq => !seq.isComplete);\n  }\n  continueAnswerSequences(row, col, letter) {\n    const sequencesToKeep = [];\n    for (let i = this.activeAnswerSequences.length - 1; i >= 0; i--) {\n      let sequence = this.activeAnswerSequences[i];\n      if (sequence.isComplete) {\n        // sequencesToKeep.push(sequence); // No es necesario mantenerla aquí si se filtra después\n        continue;\n      }\n      const answer = sequence.answerText;\n      const nextLetterIndex = sequence.positions.length;\n      if (nextLetterIndex >= answer.length) continue;\n      if (answer[nextLetterIndex] === letter) {\n        const lastPos = sequence.positions[nextLetterIndex - 1];\n        const rowDiff = Math.abs(row - lastPos.row);\n        const colDiff = Math.abs(col - lastPos.col);\n        const isAdjacent = rowDiff <= 1 && colDiff <= 1 && rowDiff + colDiff > 0;\n        // Evitar añadir la misma celda dos veces seguidas o volver a una celda ya en la secuencia.\n        const currentCellAlreadyInSequence = sequence.positions.some(p => p.row === row && p.col === col);\n        if (isAdjacent && !currentCellAlreadyInSequence) {\n          const updatedSequence = {\n            ...sequence,\n            positions: [...sequence.positions, {\n              row,\n              col\n            }],\n            isComplete: nextLetterIndex + 1 === answer.length\n          };\n          if (updatedSequence.isComplete) {\n            this.markAnswerAsFound(updatedSequence);\n            // No la removemos de activeAnswerSequences aquí, se filtrará al final.\n          } else {\n            // Actualizar la secuencia en activeAnswerSequences\n            this.activeAnswerSequences[i] = updatedSequence;\n          }\n        } else if (!isAdjacent && answer[0] !== letter) {\n          // No es adyacente Y la letra actual no es el inicio de esta palabra, eliminar secuencia.\n          this.activeAnswerSequences.splice(i, 1);\n        }\n        // Si es adyacente pero currentCellAlreadyInSequence es true, o si no es adyacente pero answer[0] === letter,\n        // la secuencia se mantiene como está para este ciclo (podría ser un nuevo intento o una palabra diferente).\n      } else {\n        // La letra no coincide con la siguiente esperada.\n        // Si la letra actual NO es la primera letra de esta secuencia, entonces esta secuencia se rompe.\n        if (answer[0] !== letter) {\n          this.activeAnswerSequences.splice(i, 1);\n        }\n        // Si es la primera letra, se mantiene (podría ser un nuevo intento o una palabra diferente).\n      }\n    }\n    // Filtrar duplicados y completadas al final\n    this.activeAnswerSequences = this.activeAnswerSequences.filter((seq, index, self) => !seq.isComplete && index === self.findIndex(s => s.answerId === seq.answerId) // Mantiene la primera instancia de cada answerId\n    );\n  }\n\n  markAnswerAsFound(sequence) {\n    const questionIndex = this.currentQuestions.findIndex(q => q.id === sequence.answerId);\n    if (questionIndex === -1 || this.currentQuestions[questionIndex].isFound) return;\n    this.currentQuestions[questionIndex].isFound = true;\n    sequence.positions.forEach((pos, index) => {\n      if (this.currentQuestions[questionIndex].foundLetters.length > index) {\n        this.currentQuestions[questionIndex].foundLetters[index] = true;\n      }\n      this.questionService.markLetterFound(sequence.answerId, index);\n      const alreadyInFound = this.foundPositions.some(fp => fp.row === pos.row && fp.col === pos.col && fp.answerId === sequence.answerId && fp.letterIndex === index);\n      if (!alreadyInFound) {\n        this.foundPositions.push({\n          row: pos.row,\n          col: pos.col,\n          answerId: sequence.answerId,\n          letterIndex: index,\n          color: this.answerColors[sequence.answerId]\n        });\n      }\n    });\n    this.activeAnswerSequences = this.activeAnswerSequences.filter(seq => seq.answerId !== sequence.answerId);\n    if (this.currentQuestions.every(q => q.isFound)) {\n      this.finalScore = this.calculateScore();\n      this.showWinMenu = true;\n      this.lockKeyboard();\n      this.isGameOver = true;\n      if (this.timerInterval) clearInterval(this.timerInterval);\n    }\n    this.cdr.detectChanges();\n  }\n  calculateScore() {\n    const factor = this.gameDifficulty === 'facil' ? 0.7 : this.gameDifficulty === 'medio' ? 0.5 : 0.3;\n    return Math.max(0, Math.floor(this.timeLeft * factor - this.steps));\n  }\n  isCarPosition(i, j) {\n    return this.carPosition.row === i && this.carPosition.col === j;\n  }\n  getPositionColor(i, j) {\n    const foundPosition = this.foundPositions.find(pos => pos.row === i && pos.col === j);\n    return foundPosition ? foundPosition.color : undefined;\n  }\n  isPositionFound(i, j) {\n    return this.foundPositions.some(pos => pos.row === i && pos.col === j);\n  }\n  getQuestionProgress(questionId) {\n    const question = this.currentQuestions.find(q => q.id === questionId);\n    if (!question || !question.answer) return {\n      found: 0,\n      total: 0\n    };\n    const foundCount = question.foundLetters.filter(f => f).length;\n    return {\n      found: foundCount,\n      total: question.answer.length\n    };\n  }\n  isQuestionLetterFound(questionId, letterIndex) {\n    const question = this.currentQuestions.find(q => q.id === questionId);\n    // Añadir chequeo para foundLetters y su longitud\n    return question && question.foundLetters && question.foundLetters.length > letterIndex ? question.foundLetters[letterIndex] : false;\n  }\n  moveCar(direction) {\n    if (this.isGameOver || !this.board.length) return;\n    const newPos = {\n      ...this.carPosition\n    };\n    switch (direction) {\n      case 'up':\n        if (newPos.row > 0) newPos.row--;\n        break;\n      case 'down':\n        if (newPos.row < this.board.length - 1) newPos.row++;\n        break;\n      case 'left':\n        if (newPos.col > 0) newPos.col--;\n        break;\n      case 'right':\n        if (newPos.col < this.board[0].length - 1) newPos.col++;\n        break;\n    }\n    if (newPos.row !== this.carPosition.row || newPos.col !== this.carPosition.col) {\n      this.gameService.updateCarPosition(newPos.row, newPos.col);\n    }\n  }\n  startTimer() {\n    if (this.timerInterval) clearInterval(this.timerInterval);\n    this.timerInterval = setInterval(() => {\n      if (this.timeLeft > 0 && !this.isGameOver) {\n        this.timeLeft--;\n      } else if (this.timeLeft === 0 && !this.isGameOver) {\n        this.isGameOver = true;\n        this.lockKeyboard();\n        clearInterval(this.timerInterval);\n        this.cdr.detectChanges();\n      }\n    }, 1000);\n  }\n  resetGame() {\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n      this.timerInterval = null;\n    }\n    this.questionService.resetCurrentQuestionsProgress();\n    this.questionService.loadGameQuestions(this.gameDifficulty);\n    this.steps = 10; // Reinicia el tope de movimientos\n    this.unlockKeyboard();\n  }\n  lockKeyboard() {\n    this.keyboardLocked = true;\n  }\n  unlockKeyboard() {\n    this.keyboardLocked = false;\n  }\n  addMove(direction) {\n    if (this.moveSequence.length < this.steps) {\n      this.moveSequence.push(direction);\n    }\n  }\n  clearMoveSequence() {\n    this.moveSequence = [];\n  }\n  sendMoveSequence() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let movesToExecute = Math.min(_this.moveSequence.length, _this.steps);\n      for (let i = 0; i < movesToExecute; i++) {\n        _this.moveCar(_this.moveSequence[i]);\n        yield new Promise(res => setTimeout(res, 120));\n        _this.steps--;\n        if (_this.steps === 0) break;\n      }\n      _this.clearMoveSequence();\n      // Si los pasos llegan a 0, bloquear teclado y movimientos\n      if (_this.steps === 0) {\n        _this.lockKeyboard();\n        _this.isGameOver = true;\n        _this.cdr.detectChanges();\n      }\n    })();\n  }\n  static ɵfac = function BoardComponent_Factory(t) {\n    return new (t || BoardComponent)(i0.ɵɵdirectiveInject(i1.GameService), i0.ɵɵdirectiveInject(i2.QuestionService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BoardComponent,\n    selectors: [[\"app-board\"]],\n    hostBindings: function BoardComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function BoardComponent_keydown_HostBindingHandler($event) {\n          return ctx.handleKeyDown($event);\n        }, false, i0.ɵɵresolveWindow)(\"resize\", function BoardComponent_resize_HostBindingHandler($event) {\n          return ctx.onResize($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 14,\n    vars: 15,\n    consts: [[1, \"game-container\"], [1, \"timer\"], [\"class\", \"game-over-modal\", 4, \"ngIf\"], [1, \"game-layout\"], [\"class\", \"board\", 4, \"ngIf\"], [\"class\", \"loading-board\", 4, \"ngIf\"], [\"class\", \"no-questions\", 4, \"ngIf\"], [\"class\", \"target-elements\", 4, \"ngIf\"], [\"class\", \"controls-move-chain\", 4, \"ngIf\"], [\"class\", \"keyboard-instructions\", 4, \"ngIf\"], [1, \"game-over-modal\"], [1, \"game-over-content\"], [3, \"click\"], [\"routerLink\", \"/\", \"routerLinkActive\", \"active-link\", 1, \"home-link\"], [1, \"board\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [3, \"value\", \"isCarPosition\", \"isFound\", \"foundColor\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"isCarPosition\", \"isFound\", \"foundColor\"], [1, \"loading-board\"], [1, \"no-questions\"], [\"routerLink\", \"/admin\"], [1, \"target-elements\"], [1, \"questions-container\"], [\"class\", \"question-item\", 3, \"border-left-color\", \"question-found\", 4, \"ngFor\", \"ngForOf\"], [1, \"game-actions\"], [\"type\", \"button\", 1, \"reset-button\", 3, \"click\"], [1, \"question-item\"], [1, \"question-text\"], [1, \"answer-letters\"], [3, \"found\", \"background-color\", 4, \"ngFor\", \"ngForOf\"], [1, \"progress\"], [1, \"controls-move-chain\"], [1, \"move-buttons\"], [\"type\", \"button\", 1, \"btn-up\", 3, \"click\"], [\"type\", \"button\", 1, \"btn-left\", 3, \"click\"], [\"type\", \"button\", 1, \"btn-right\", 3, \"click\"], [\"type\", \"button\", 1, \"btn-down\", 3, \"click\"], [1, \"move-sequence\"], [\"class\", \"move-placeholder\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"clear-moves\", \"title\", \"Limpiar secuencia\", 3, \"click\", 4, \"ngIf\"], [1, \"send-moves\", 3, \"disabled\", \"click\"], [1, \"steps-counter\"], [1, \"move-placeholder\"], [1, \"move-chip\", 3, \"ngClass\"], [\"title\", \"Limpiar secuencia\", 1, \"clear-moves\", 3, \"click\"], [1, \"keyboard-instructions\"]],\n    template: function BoardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Sopa de Letras: Edici\\u00F3n Din\\u00E1mica\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, BoardComponent_div_5_Template, 11, 0, \"div\", 2);\n        i0.ɵɵtemplate(6, BoardComponent_div_6_Template, 15, 1, \"div\", 2);\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵtemplate(8, BoardComponent_div_8_Template, 2, 1, \"div\", 4);\n        i0.ɵɵtemplate(9, BoardComponent_div_9_Template, 2, 0, \"div\", 5);\n        i0.ɵɵtemplate(10, BoardComponent_div_10_Template, 8, 0, \"div\", 6);\n        i0.ɵɵtemplate(11, BoardComponent_div_11_Template, 11, 1, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, BoardComponent_div_12_Template, 18, 5, \"div\", 8);\n        i0.ɵɵtemplate(13, BoardComponent_div_13_Template, 3, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"game-over\", ctx.isGameOver && ctx.timeLeft === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \\u23F0 Tiempo restante: \", ctx.timeLeft, \"s \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isGameOver && !ctx.showWinMenu && ctx.timeLeft === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showWinMenu);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"mobile-layout\", ctx.isMobileDevice)(\"desktop-layout\", !ctx.isMobileDevice);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.board.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.board.length === 0 && ctx.currentQuestions.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentQuestions.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentQuestions.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentQuestions.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isMobileDevice && ctx.currentQuestions.length > 0);\n      }\n    },\n    dependencies: [CommonModule, i3.NgClass, i3.NgForOf, i3.NgIf, i3.TitleCasePipe, CellComponent, RouterLink],\n    styles: [\"@charset \\\"UTF-8\\\";\\n\\n\\n\\n\\n\\n\\n.target-elements[_ngcontent-%COMP%] {\\n  background-color: #fff;\\n  padding: 15px;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n\\n.desktop-layout[_ngcontent-%COMP%]   .target-elements[_ngcontent-%COMP%] {\\n  width: 350px; \\n\\n  max-height: 500px; \\n\\n  overflow-y: auto;\\n}\\n\\n.mobile-layout[_ngcontent-%COMP%]   .target-elements[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 500px;\\n  margin-top: 15px;\\n}\\n\\n.questions-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 12px; \\n\\n}\\n\\n.question-item[_ngcontent-%COMP%] {\\n  padding: 12px;\\n  background-color: #f8f9fa;\\n  border-radius: 6px;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n  border-left: 5px solid; \\n\\n  transition: all 0.3s ease;\\n}\\n\\n.question-item.question-found[_ngcontent-%COMP%] {\\n  background-color: #e8f5e9; \\n\\n  opacity: 0.7;\\n}\\n\\n.question-text[_ngcontent-%COMP%] {\\n  margin-bottom: 8px;\\n  font-size: 0.95em;\\n  color: #333;\\n  line-height: 1.4;\\n}\\n\\n.question-text[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  color: #1a237e; \\n\\n}\\n\\n.answer-letters[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-start; \\n\\n  flex-wrap: wrap; \\n\\n  margin-top: 8px;\\n  gap: 3px; \\n\\n}\\n\\n.answer-letters[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  font-size: 1em; \\n\\n  font-weight: bold;\\n  padding: 3px 5px;\\n  border-radius: 4px;\\n  background-color: #e0e0e0; \\n\\n  min-width: 22px;\\n  text-align: center;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\\n  transition: all 0.3s ease;\\n  color: #424242; \\n\\n}\\n\\n.answer-letters[_ngcontent-%COMP%]   span.found[_ngcontent-%COMP%] {\\n  color: white !important; \\n\\n  animation: _ngcontent-%COMP%_pulse 0.8s; \\n\\n}\\n\\n@keyframes _ngcontent-%COMP%_pulse {\\n  0% {\\n    transform: scale(1);\\n  }\\n  50% {\\n    transform: scale(1.1);\\n  }\\n  100% {\\n    transform: scale(1);\\n  }\\n}\\n.progress[_ngcontent-%COMP%] {\\n  margin-top: 8px;\\n  font-size: 0.8em;\\n  color: #7f8c8d;\\n}\\n\\n.game-actions[_ngcontent-%COMP%] {\\n  margin-top: 15px;\\n  display: flex;\\n  justify-content: space-around; \\n\\n  gap: 10px;\\n}\\n\\n.home-link[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .reset-button[_ngcontent-%COMP%] {\\n  padding: 10px 15px;\\n  font-size: 0.9em;\\n  border-radius: 6px;\\n  cursor: pointer;\\n  border: none;\\n  font-weight: 600;\\n  transition: background-color 0.2s ease, transform 0.2s ease;\\n}\\n\\n.home-link[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  background-color: #007bff; \\n\\n  color: white;\\n}\\n\\n.home-link[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n  transform: translateY(-1px);\\n}\\n\\n.reset-button[_ngcontent-%COMP%] {\\n  background-color: #dc3545; \\n\\n  color: white;\\n}\\n\\n.reset-button[_ngcontent-%COMP%]:hover {\\n  background-color: #c82333;\\n  transform: translateY(-1px);\\n}\\n\\n.no-questions[_ngcontent-%COMP%], .loading-board[_ngcontent-%COMP%] {\\n  text-align: center;\\n  padding: 40px;\\n  font-size: 1.2em;\\n  color: #555;\\n}\\n\\n.no-questions[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  color: #007bff;\\n  text-decoration: underline;\\n}\\n\\n\\n\\n\\n\\n.game-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin: 10px auto;\\n  padding: 15px;\\n  font-family: Arial, sans-serif;\\n  background-color: #e9f5ff;\\n  border-radius: 15px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\n  max-width: 100%;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  color: #2c3e50;\\n  margin-bottom: 15px;\\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);\\n  text-align: center;\\n}\\n\\n.timer[_ngcontent-%COMP%] {\\n  font-size: 1.3rem;\\n  font-weight: bold;\\n  color: #2c3e50;\\n  background: #eaf6fb;\\n  border-radius: 8px;\\n  padding: 8px 18px;\\n  margin-bottom: 10px;\\n  box-shadow: 0 2px 8px rgba(52, 152, 219, 0.08);\\n  transition: background 0.3s, color 0.3s;\\n}\\n\\n.timer.game-over[_ngcontent-%COMP%] {\\n  color: #e74c3c;\\n  background: #ffeaea;\\n}\\n\\n.game-over-modal[_ngcontent-%COMP%] {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background: rgba(0, 0, 0, 0.45);\\n  z-index: 9999;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  pointer-events: all;\\n  animation: _ngcontent-%COMP%_fadeInBg 0.3s;\\n}\\n\\n.game-over-content[_ngcontent-%COMP%] {\\n  background: #fff;\\n  border-radius: 18px;\\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.25);\\n  padding: 36px 32px 28px 32px;\\n  min-width: 260px;\\n  text-align: center;\\n  animation: _ngcontent-%COMP%_popIn 0.35s cubic-bezier(0.68, -0.55, 0.27, 1.55);\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n.game-over-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  color: #e74c3c; \\n\\n  margin-bottom: 10px;\\n  font-size: 2rem;\\n}\\n\\n.game-over-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  color: #2c3e50;\\n  margin-bottom: 22px;\\n  font-size: 1.1rem;\\n}\\n\\n.game-over-content[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .game-over-content[_ngcontent-%COMP%]   .home-link[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  margin: 8px 0 0 0;\\n  width: 160px;\\n  padding: 12px 0;\\n  font-size: 1.1rem;\\n  border-radius: 8px;\\n  border: none;\\n  background: linear-gradient(90deg, #3498db 60%, #8e44ad 100%);\\n  color: #fff;\\n  font-weight: 600;\\n  box-shadow: 0 2px 8px rgba(52, 152, 219, 0.08);\\n  cursor: pointer;\\n  transition: transform 0.15s, box-shadow 0.15s, background 0.2s;\\n}\\n\\n.game-over-content[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover, .game-over-content[_ngcontent-%COMP%]   .home-link[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background: linear-gradient(90deg, #8e44ad 60%, #3498db 100%);\\n  transform: scale(1.04);\\n  box-shadow: 0 4px 16px rgba(52, 152, 219, 0.18);\\n}\\n\\n.game-layout[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%; \\n\\n  max-width: 1200px; \\n\\n  margin: 0 auto; \\n\\n  justify-content: center;\\n  gap: 20px;\\n  margin-bottom: 20px;\\n}\\n\\n.desktop-layout[_ngcontent-%COMP%] {\\n  flex-direction: row;\\n  align-items: flex-start;\\n}\\n\\n.mobile-layout[_ngcontent-%COMP%] {\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n.board[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  border: 3px solid #3498db;\\n  border-radius: 8px;\\n  overflow: hidden;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  background-color: #f9f9f9;\\n}\\n\\n.row[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n\\n.controls[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  grid-template-rows: repeat(3, 1fr);\\n  gap: 8px;\\n  width: 100%;\\n  max-width: 200px;\\n}\\n\\n.controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] { \\n\\n  width: 60px;\\n  height: 60px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  font-size: 28px;\\n  cursor: pointer;\\n  color: white;\\n  border: none;\\n  border-radius: 12px;\\n  box-shadow: 0 5px 0 rgba(0, 0, 0, 0.2), inset 0 2px 0 rgba(255, 255, 255, 0.5);\\n  transition: all 0.1s ease;\\n  touch-action: manipulation;\\n}\\n\\n.controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-3px);\\n  box-shadow: 0 7px 0 rgba(0, 0, 0, 0.2), inset 0 2px 0 rgba(255, 255, 255, 0.5);\\n}\\n\\n.controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:active {\\n  transform: translateY(3px);\\n  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.2), inset 0 1px 0 rgba(255, 255, 255, 0.5);\\n}\\n\\n.btn-up[_ngcontent-%COMP%] {\\n  grid-column: 2;\\n  grid-row: 1;\\n  background-color: #3498db;\\n  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);\\n}\\n\\n.btn-left[_ngcontent-%COMP%] {\\n  grid-column: 1;\\n  grid-row: 2;\\n  background-color: #f1c40f;\\n  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);\\n}\\n\\n.btn-right[_ngcontent-%COMP%] {\\n  grid-column: 3;\\n  grid-row: 2;\\n  background-color: #2ecc71;\\n  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);\\n}\\n\\n.btn-down[_ngcontent-%COMP%] {\\n  grid-column: 2;\\n  grid-row: 3;\\n  background-color: #e74c3c;\\n  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);\\n}\\n\\n.btn-step[_ngcontent-%COMP%] {\\n  grid-row: 2;\\n  grid-column: 2;\\n  background-color: #1d191f;\\n}\\n\\n.keyboard-instructions[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  text-align: center;\\n  font-size: 14px;\\n  color: #7f8c8d;\\n  font-style: italic;\\n}\\n\\n@keyframes _ngcontent-%COMP%_fadeInBg {\\n  from {\\n    opacity: 0;\\n  }\\n  to {\\n    opacity: 1;\\n  }\\n}\\n@keyframes _ngcontent-%COMP%_popIn {\\n  0% {\\n    transform: scale(0.7) translateY(20px);\\n    opacity: 0;\\n  }\\n  100% {\\n    transform: scale(1) translateY(0);\\n    opacity: 1;\\n  }\\n}\\n\\n\\n.controls-move-chain[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin: 18px 0 10px 0;\\n  gap: 10px;\\n}\\n\\n.move-buttons[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 12px;\\n  margin-bottom: 6px;\\n}\\n\\n.move-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  width: 54px;\\n  height: 54px;\\n  font-size: 1.7em;\\n  border-radius: 10px;\\n  border: none;\\n  background: linear-gradient(90deg, #3498db 60%, #8e44ad 100%);\\n  color: #fff;\\n  font-weight: bold;\\n  box-shadow: 0 2px 8px rgba(52, 152, 219, 0.08);\\n  cursor: pointer;\\n  transition: background 0.2s, transform 0.1s;\\n}\\n\\n.move-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background: linear-gradient(90deg, #8e44ad 60%, #3498db 100%);\\n  transform: scale(1.08);\\n}\\n\\n.move-sequence[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n  min-height: 36px;\\n  flex-wrap: wrap;\\n  margin-bottom: 2px;\\n}\\n\\n.move-chip[_ngcontent-%COMP%] {\\n  padding: 5px 10px;\\n  border-radius: 6px;\\n  background: #e0e0e0;\\n  color: #333;\\n  font-weight: 600;\\n  font-size: 1em;\\n  margin-right: 2px;\\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.07);\\n  border: 1.5px solid #bdbdbd;\\n  text-shadow: 0 1px 1px rgba(255, 255, 255, 0.1333333333);\\n}\\n\\n.move-up[_ngcontent-%COMP%] {\\n  background: #3498db;\\n  color: #fff;\\n}\\n\\n.move-down[_ngcontent-%COMP%] {\\n  background: #e74c3c;\\n  color: #fff;\\n}\\n\\n.move-left[_ngcontent-%COMP%] {\\n  background: #f1c40f;\\n  color: #fff;\\n}\\n\\n.move-right[_ngcontent-%COMP%] {\\n  background: #2ecc71;\\n  color: #fff;\\n}\\n\\n.move-placeholder[_ngcontent-%COMP%] {\\n  color: #aaa;\\n  font-style: italic;\\n  font-size: 0.98em;\\n}\\n\\n.clear-moves[_ngcontent-%COMP%] {\\n  background: #dc3545;\\n  color: #fff;\\n  border: none;\\n  border-radius: 50%;\\n  width: 28px;\\n  height: 28px;\\n  font-size: 1.1em;\\n  margin-left: 8px;\\n  cursor: pointer;\\n  transition: background 0.2s, transform 0.1s;\\n}\\n\\n.clear-moves[_ngcontent-%COMP%]:hover {\\n  background: #b71c1c;\\n  transform: scale(1.1);\\n}\\n\\n.send-moves[_ngcontent-%COMP%] {\\n  margin-top: 4px;\\n  padding: 10px 22px;\\n  background: linear-gradient(90deg, #27ae60 60%, #16a085 100%);\\n  color: #fff;\\n  border: none;\\n  border-radius: 8px;\\n  font-size: 1.1em;\\n  font-weight: 600;\\n  box-shadow: 0 2px 8px rgba(39, 174, 96, 0.08);\\n  cursor: pointer;\\n  transition: background 0.2s, transform 0.1s;\\n}\\n\\n.send-moves[_ngcontent-%COMP%]:disabled {\\n  background: #bdbdbd;\\n  color: #fff;\\n  cursor: not-allowed;\\n}\\n\\n.send-moves[_ngcontent-%COMP%]:hover:not(:disabled) {\\n  background: linear-gradient(90deg, #16a085 60%, #27ae60 100%);\\n  transform: scale(1.04);\\n}\\n\\n.steps-counter[_ngcontent-%COMP%] {\\n  margin-top: 2px;\\n  font-size: 1em;\\n  color: #2c3e50;\\n  font-weight: 500;\\n}\\n\\n@media (max-width: 768px) {\\n  .game-container[_ngcontent-%COMP%] {\\n    padding: 10px;\\n    margin: 5px;\\n  }\\n  h2[_ngcontent-%COMP%] {\\n    font-size: 18px;\\n  }\\n  .controls[_ngcontent-%COMP%] {\\n    max-width: 200px;\\n    gap: 10px;\\n  }\\n  .controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    width: 70px;\\n    height: 70px;\\n    font-size: 32px;\\n  }\\n  .mobile-layout[_ngcontent-%COMP%]   .questions-container[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  } \\n\\n  .mobile-layout[_ngcontent-%COMP%]   .question-item[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n  .answer-letters[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n    font-size: 0.9em;\\n    min-width: 20px;\\n  }\\n  .controls-move-chain[_ngcontent-%COMP%]   .move-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    width: 60px;\\n    height: 60px;\\n    font-size: 2em;\\n  }\\n  .move-sequence[_ngcontent-%COMP%] {\\n    min-height: 30px;\\n    font-size: 0.95em;\\n  }\\n}\\n@media (max-width: 480px) {\\n  .game-container[_ngcontent-%COMP%] {\\n    padding: 8px;\\n    margin: 2px;\\n  }\\n  .controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    width: 65px;\\n    height: 65px;\\n    font-size: 30px;\\n  }\\n  .controls[_ngcontent-%COMP%] {\\n    max-width: 180px;\\n  }\\n  .mobile-layout[_ngcontent-%COMP%]   .question-item[_ngcontent-%COMP%] {\\n    min-width: 100%;\\n  }\\n  .answer-letters[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n    font-size: 0.8em;\\n    min-width: 18px;\\n  }\\n  .controls-move-chain[_ngcontent-%COMP%]   .move-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    width: 50px;\\n    height: 50px;\\n    font-size: 1.8em;\\n  }\\n}\\n@media (min-width: 1024px) {\\n  .game-container[_ngcontent-%COMP%] {\\n    max-width: 1200px;\\n  }\\n  .desktop-layout[_ngcontent-%COMP%] {\\n    gap: 30px;\\n  }\\n  .desktop-layout[_ngcontent-%COMP%]   .target-elements[_ngcontent-%COMP%] {\\n    width: 400px;\\n  } \\n\\n  .controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    width: 55px;\\n    height: 55px;\\n    font-size: 26px;\\n  }\\n  .controls[_ngcontent-%COMP%] {\\n    max-width: 180px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  });\n}\nexport { BoardComponent };","map":{"version":3,"names":["CommonModule","CellComponent","Subscription","RouterLink","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","BoardComponent_div_5_Template_button_click_6_listener","ɵɵrestoreView","_r9","ctx_r8","ɵɵnextContext","ɵɵresetView","resetGame","BoardComponent_div_6_Template_button_click_10_listener","_r11","ctx_r10","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","finalScore","ɵɵelement","ɵɵproperty","cell_r16","ctx_r15","isCarPosition","i_r14","j_r17","isPositionFound","getPositionColor","ɵɵtemplate","BoardComponent_div_8_div_1_app_cell_1_Template","row_r13","BoardComponent_div_8_div_1_Template","ctx_r2","board","ɵɵstyleProp","ctx_r21","isQuestionLetterFound","question_r20","id","i_r23","answerColors","ɵɵclassProp","ɵɵtextInterpolate1","letter_r22","BoardComponent_div_11_div_4_span_5_Template","ctx_r19","isFound","question","answer","split","ɵɵtextInterpolate2","getQuestionProgress","found","total","BoardComponent_div_11_div_4_Template","BoardComponent_div_11_Template_button_click_9_listener","_r26","ctx_r25","ctx_r5","currentQuestions","ɵɵelementContainerStart","ɵɵelementContainerEnd","move_r30","ɵɵpipeBind1","BoardComponent_div_12_button_13_Template_button_click_0_listener","_r33","ctx_r32","clearMoveSequence","BoardComponent_div_12_Template_button_click_2_listener","_r35","ctx_r34","addMove","BoardComponent_div_12_Template_button_click_4_listener","ctx_r36","BoardComponent_div_12_Template_button_click_6_listener","ctx_r37","BoardComponent_div_12_Template_button_click_8_listener","ctx_r38","BoardComponent_div_12_span_11_Template","BoardComponent_div_12_ng_container_12_Template","BoardComponent_div_12_button_13_Template","BoardComponent_div_12_Template_button_click_14_listener","ctx_r39","sendMoveSequence","ctx_r6","moveSequence","length","steps","BoardComponent","gameService","questionService","cdr","carPosition","row","col","foundPositions","activeAnswerSequences","subscriptions","isMobileDevice","timeLeft","timerInterval","isGameOver","keyboardLocked","showWinMenu","gameDifficulty","constructor","handleKeyDown","event","preventDefault","key","moveCar","onResize","checkDeviceType","window","innerWidth","ngOnInit","storedDifficulty","localStorage","getItem","loadGameQuestions","questionsSub","getCurrentQuestions","subscribe","questions","initializeGame","console","warn","detectChanges","add","carPosSub","getCarPosition","position","checkForAnswerSequence","assignAnswerColors","initializeBoard","resetTimer","unlockKeyboard","startTimer","ngOnDestroy","unsubscribe","clearInterval","colors","forEach","index","answers","map","q","toUpperCase","difficulty","rows","cols","Array","fill","i","j","String","fromCharCode","Math","floor","random","placeAnswersRandomly","placeCarRandomly","occupiedPositions","Set","placed","attempts","maxAttempts","orientation","tryPlaceAnswer","startRowLimit","startColLimit","startRow","startCol","positions","possible","r","c","posKey","has","push","isPositionPartOfAnyAnswer","updateCarPosition","letterInCell","some","includes","currentRow","currentCol","currentLetter","isPartOfExistingActiveSequence","seq","answerId","p","alreadyFoundInFoundPositions","pos","letterIndex","answerText","isComplete","markAnswerAsFound","continueAnswerSequences","filter","letter","sequencesToKeep","sequence","nextLetterIndex","lastPos","rowDiff","abs","colDiff","isAdjacent","currentCellAlreadyInSequence","updatedSequence","splice","self","findIndex","s","questionIndex","foundLetters","markLetterFound","alreadyInFound","fp","color","every","calculateScore","lockKeyboard","factor","max","foundPosition","find","undefined","questionId","foundCount","f","direction","newPos","setInterval","resetCurrentQuestionsProgress","_this","_asyncToGenerator","movesToExecute","min","Promise","res","setTimeout","ɵɵdirectiveInject","i1","GameService","i2","QuestionService","ChangeDetectorRef","selectors","hostBindings","BoardComponent_HostBindings","rf","ctx","$event","ɵɵresolveWindow","BoardComponent_resize_HostBindingHandler","BoardComponent_div_5_Template","BoardComponent_div_6_Template","BoardComponent_div_8_Template","BoardComponent_div_9_Template","BoardComponent_div_10_Template","BoardComponent_div_11_Template","BoardComponent_div_12_Template","BoardComponent_div_13_Template","i3","NgClass","NgForOf","NgIf","TitleCasePipe","styles"],"sources":["C:\\Users\\ETHAN PIERCE\\Desktop\\web\\P-Web\\src\\app\\board\\board.component.ts","C:\\Users\\ETHAN PIERCE\\Desktop\\web\\P-Web\\src\\app\\board\\board.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy, HostListener, ChangeDetectorRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CellComponent } from '../cell/cell.component'; // Asegúrate que la ruta sea correcta y CellComponent sea standalone\r\nimport { GameService } from '../game.service'; // Asumiendo que está en src/app/game.service.ts\r\n// Corregida la ruta para QuestionService:\r\nimport { QuestionService, Question } from '../services/question.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { RouterLink } from '@angular/router';\r\n\r\ninterface FoundPosition {\r\n  row: number;\r\n  col: number;\r\n  answerId: string;\r\n  letterIndex: number;\r\n  color: string;\r\n}\r\n\r\ninterface AnswerSequence {\r\n  answerId: string;\r\n  answerText: string;\r\n  positions: { row: number, col: number }[];\r\n  isComplete: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-board',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    CellComponent, // CellComponent debe ser standalone o parte de un NgModule importado\r\n    RouterLink\r\n  ],\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.scss'] // Usa styleUrls en plural y como array\r\n})\r\nexport class BoardComponent implements OnInit, OnDestroy {\r\n  steps: number = 10; // Cambia el valor inicial según el tope de movimientos deseado\r\n  board: string[][] = [];\r\n  carPosition = { row: 0, col: 0 };\r\n\r\n  currentQuestions: Question[] = [];\r\n  foundPositions: FoundPosition[] = [];\r\n  activeAnswerSequences: AnswerSequence[] = [];\r\n\r\n  answerColors: { [key: string]: string } = {};\r\n\r\n  private subscriptions: Subscription = new Subscription();\r\n\r\n  isMobileDevice: boolean = false;\r\n  timeLeft: number = 0;\r\n  timerInterval: any = null;\r\n  isGameOver: boolean = false;\r\n  keyboardLocked: boolean = false;\r\n  showWinMenu: boolean = false;\r\n  finalScore: number = 0;\r\n  gameDifficulty: 'facil' | 'medio' | 'dificil' = 'facil';\r\n\r\n  moveSequence: Array<'up' | 'down' | 'left' | 'right'> = [];\r\n\r\n  constructor(\r\n    private gameService: GameService,\r\n    private questionService: QuestionService, // Asegúrate que QuestionService esté bien importado y proveído (e.g. providedIn: 'root')\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  @HostListener('window:keydown', ['$event'])\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    if (this.keyboardLocked || this.isGameOver) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    switch (event.key) {\r\n      case 'ArrowUp': this.moveCar('up'); break;\r\n      case 'ArrowDown': this.moveCar('down'); break;\r\n      case 'ArrowLeft': this.moveCar('left'); break;\r\n      case 'ArrowRight': this.moveCar('right'); break;\r\n    }\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize() {\r\n    this.checkDeviceType();\r\n  }\r\n\r\n  checkDeviceType() {\r\n    this.isMobileDevice = window.innerWidth <= 768;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.checkDeviceType();\r\n    const storedDifficulty = localStorage.getItem('dificultad') as 'facil' | 'medio' | 'dificil';\r\n    this.gameDifficulty = storedDifficulty || 'facil';\r\n\r\n    this.questionService.loadGameQuestions(this.gameDifficulty);\r\n\r\n    const questionsSub = this.questionService.getCurrentQuestions().subscribe((questions: Question[]) => { // Tipo añadido\r\n      this.currentQuestions = questions;\r\n      if (questions.length > 0) {\r\n        this.initializeGame();\r\n      } else {\r\n        console.warn(`No hay preguntas para la dificultad: ${this.gameDifficulty}`);\r\n        this.board = []; // Limpiar el tablero si no hay preguntas\r\n      }\r\n      this.cdr.detectChanges();\r\n    });\r\n    this.subscriptions.add(questionsSub);\r\n\r\n    // Solo suscribe a carPosition si GameService se usa activamente para la lógica del juego\r\n    const carPosSub = this.gameService.getCarPosition().subscribe(position => {\r\n      this.carPosition = position;\r\n      if (this.currentQuestions.length > 0 && this.board.length > 0) { // Solo verificar si el juego está activo\r\n          this.checkForAnswerSequence();\r\n      }\r\n    });\r\n    this.subscriptions.add(carPosSub);\r\n  }\r\n\r\n  initializeGame(): void {\r\n    this.foundPositions = [];\r\n    this.activeAnswerSequences = [];\r\n    this.assignAnswerColors();\r\n    this.initializeBoard();\r\n    this.resetTimer(); // Mover antes de startTimer\r\n    this.isGameOver = false;\r\n    this.showWinMenu = false;\r\n    this.finalScore = 0;\r\n    this.steps = 0;\r\n    this.unlockKeyboard();\r\n    this.startTimer(); // Iniciar temporizador después de resetear\r\n  }\r\n\r\n  resetTimer(): void {\r\n    switch (this.gameDifficulty) {\r\n      case 'facil': this.timeLeft = 240; break;\r\n      case 'medio': this.timeLeft = 180; break;\r\n      case 'dificil': this.timeLeft = 120; break;\r\n      default: this.timeLeft = 240;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n    if (this.timerInterval) {\r\n      clearInterval(this.timerInterval);\r\n    }\r\n  }\r\n\r\n  assignAnswerColors(): void {\r\n    const colors = ['#16a085', '#f39c12', '#e67e22', '#2980b9', '#c0392b', '#27ae60', '#8e44ad', '#d35400', '#2ecc71', '#9b59b6', '#34495e', '#e74c3c'];\r\n    this.currentQuestions.forEach((question, index) => {\r\n      this.answerColors[question.id] = colors[index % colors.length];\r\n    });\r\n  }\r\n\r\n  initializeBoard(): void {\r\n    const answers = this.currentQuestions.map(q => q.answer.toUpperCase()); // Asegurar mayúsculas\r\n    if (answers.length === 0) {\r\n        this.board = []; // Tablero vacío\r\n        console.warn(\"No hay respuestas para colocar en el tablero.\");\r\n        return;\r\n    }\r\n\r\n    const difficulty = this.gameDifficulty;\r\n    const rows = difficulty === 'facil' ? 10 : difficulty === 'medio' ? 15 : 20;\r\n    const cols = difficulty === 'facil' ? 10 : difficulty === 'medio' ? 15 : 20;\r\n\r\n    this.board = Array(rows).fill(null).map(() => Array(cols).fill(''));\r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < cols; j++) {\r\n        this.board[i][j] = String.fromCharCode(65 + Math.floor(Math.random() * 26)); // Letras A-Z\r\n      }\r\n    }\r\n    this.placeAnswersRandomly(answers);\r\n    this.placeCarRandomly();\r\n  }\r\n\r\n  placeAnswersRandomly(answers: string[]): void {\r\n    const occupiedPositions = new Set<string>();\r\n    for (const answer of answers) {\r\n      if (!answer) continue; // Saltar si la respuesta es undefined o vacía\r\n      let placed = false;\r\n      let attempts = 0;\r\n      const maxAttempts = 100;\r\n      while (!placed && attempts < maxAttempts) {\r\n        attempts++;\r\n        const orientation = Math.floor(Math.random() * 3); // 0:H, 1:V, 2:D (simplificada)\r\n        placed = this.tryPlaceAnswer(answer, orientation, occupiedPositions);\r\n      }\r\n      if (!placed) {\r\n        console.warn(`No se pudo colocar la respuesta: ${answer}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  tryPlaceAnswer(answer: string, orientation: number, occupiedPositions: Set<string>): boolean {\r\n    const rows = this.board.length;\r\n    const cols = this.board[0].length;\r\n    let startRowLimit = rows;\r\n    let startColLimit = cols;\r\n\r\n    switch (orientation) {\r\n      case 0: startColLimit = cols - answer.length + 1; break;\r\n      case 1: startRowLimit = rows - answer.length + 1; break;\r\n      case 2: // Diagonal simple (arriba-izquierda a abajo-derecha)\r\n        startRowLimit = rows - answer.length + 1;\r\n        startColLimit = cols - answer.length + 1;\r\n        break;\r\n    }\r\n\r\n    if (startRowLimit <= 0 || startColLimit <= 0) return false;\r\n\r\n    const startRow = Math.floor(Math.random() * startRowLimit);\r\n    const startCol = Math.floor(Math.random() * startColLimit);\r\n\r\n    const positions: [number, number][] = [];\r\n    let possible = true;\r\n\r\n    for (let i = 0; i < answer.length; i++) {\r\n      let r = startRow, c = startCol;\r\n      if (orientation === 0) c += i;\r\n      else if (orientation === 1) r += i;\r\n      else { r += i; c += i; }\r\n\r\n      if (r < 0 || r >= rows || c < 0 || c >= cols) {\r\n        possible = false; break;\r\n      }\r\n      const posKey = `${r},${c}`;\r\n      if (occupiedPositions.has(posKey) && this.board[r][c] !== answer[i]) {\r\n        possible = false; break;\r\n      }\r\n      positions.push([r, c]);\r\n    }\r\n\r\n    if (possible) {\r\n      positions.forEach(([r, c], i) => {\r\n        this.board[r][c] = answer[i];\r\n        occupiedPositions.add(`${r},${c}`);\r\n      });\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  placeCarRandomly(): void {\r\n    const rows = this.board.length;\r\n    const cols = this.board[0].length;\r\n    if (rows === 0 || cols === 0) return;\r\n\r\n    let r, c;\r\n    let attempts = 0;\r\n    const maxAttempts = rows * cols; // Evitar bucle infinito si el tablero está lleno\r\n    do {\r\n        r = Math.floor(Math.random() * rows);\r\n        c = Math.floor(Math.random() * cols);\r\n        attempts++;\r\n        if (attempts > maxAttempts) { // Fallback si no se encuentra posición libre\r\n            r = 0; c = 0;\r\n            break;\r\n        }\r\n    } while (this.isPositionPartOfAnyAnswer(r,c));\r\n    r = 0; c = 0; // Asegurarse de que el carro comienza en la esquina superior izquierda\r\n    this.carPosition = { row: r, col: c };\r\n    this.gameService.updateCarPosition(r, c);\r\n  }\r\n\r\n  isPositionPartOfAnyAnswer(row: number, col: number): boolean {\r\n    // Esta función es una simplificación. Para ser preciso, necesitarías\r\n    // almacenar las coordenadas exactas de cada respuesta colocada.\r\n    // Por ahora, verifica si la letra en la celda es parte de alguna respuesta.\r\n    if (!this.board[row] || !this.board[row][col]) return false;\r\n    const letterInCell = this.board[row][col];\r\n    return this.currentQuestions.some(q => q.answer.includes(letterInCell));\r\n  }\r\n\r\n  checkForAnswerSequence(): void {\r\n    if (this.isGameOver || !this.board.length) return;\r\n    const currentRow = this.carPosition.row;\r\n    const currentCol = this.carPosition.col;\r\n    // Asegurarse de que la posición del carro es válida\r\n    if (currentRow < 0 || currentRow >= this.board.length || currentCol < 0 || currentCol >= this.board[0].length) {\r\n        return;\r\n    }\r\n    const currentLetter = this.board[currentRow][currentCol];\r\n\r\n    for (const question of this.currentQuestions) {\r\n      if (question.isFound || !question.answer) continue;\r\n\r\n      if (question.answer[0] === currentLetter) {\r\n        const isPartOfExistingActiveSequence = this.activeAnswerSequences.some(seq =>\r\n            seq.answerId === question.id &&\r\n            seq.positions.some(p => p.row === currentRow && p.col === currentCol)\r\n        );\r\n        if (isPartOfExistingActiveSequence) continue;\r\n\r\n        const alreadyFoundInFoundPositions = this.foundPositions.some(pos =>\r\n          pos.row === currentRow && pos.col === currentCol && pos.answerId === question.id && pos.letterIndex === 0\r\n        );\r\n\r\n        if (!alreadyFoundInFoundPositions) {\r\n          // Iniciar nueva secuencia\r\n          this.activeAnswerSequences.push({\r\n            answerId: question.id,\r\n            answerText: question.answer,\r\n            positions: [{ row: currentRow, col: currentCol }],\r\n            isComplete: question.answer.length === 1 // Completa si la respuesta es de 1 letra\r\n          });\r\n          if (question.answer.length === 1) {\r\n             this.markAnswerAsFound(this.activeAnswerSequences[this.activeAnswerSequences.length - 1]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.continueAnswerSequences(currentRow, currentCol, currentLetter);\r\n    this.activeAnswerSequences = this.activeAnswerSequences.filter(seq => !seq.isComplete);\r\n  }\r\n\r\n  continueAnswerSequences(row: number, col: number, letter: string): void {\r\n    const sequencesToKeep: AnswerSequence[] = [];\r\n\r\n    for (let i = this.activeAnswerSequences.length - 1; i >= 0; i--) {\r\n        let sequence = this.activeAnswerSequences[i];\r\n        if (sequence.isComplete) {\r\n            // sequencesToKeep.push(sequence); // No es necesario mantenerla aquí si se filtra después\r\n            continue;\r\n        }\r\n\r\n        const answer = sequence.answerText;\r\n        const nextLetterIndex = sequence.positions.length;\r\n\r\n        if (nextLetterIndex >= answer.length) continue;\r\n\r\n        if (answer[nextLetterIndex] === letter) {\r\n            const lastPos = sequence.positions[nextLetterIndex - 1];\r\n            const rowDiff = Math.abs(row - lastPos.row);\r\n            const colDiff = Math.abs(col - lastPos.col);\r\n            const isAdjacent = (rowDiff <= 1 && colDiff <= 1) && (rowDiff + colDiff > 0);\r\n\r\n            // Evitar añadir la misma celda dos veces seguidas o volver a una celda ya en la secuencia.\r\n            const currentCellAlreadyInSequence = sequence.positions.some(p => p.row === row && p.col === col);\r\n\r\n            if (isAdjacent && !currentCellAlreadyInSequence) {\r\n                const updatedSequence: AnswerSequence = {\r\n                    ...sequence,\r\n                    positions: [...sequence.positions, { row, col }],\r\n                    isComplete: nextLetterIndex + 1 === answer.length\r\n                };\r\n\r\n                if (updatedSequence.isComplete) {\r\n                    this.markAnswerAsFound(updatedSequence);\r\n                    // No la removemos de activeAnswerSequences aquí, se filtrará al final.\r\n                } else {\r\n                    // Actualizar la secuencia en activeAnswerSequences\r\n                    this.activeAnswerSequences[i] = updatedSequence;\r\n                }\r\n            } else if (!isAdjacent && answer[0] !== letter) {\r\n                // No es adyacente Y la letra actual no es el inicio de esta palabra, eliminar secuencia.\r\n                 this.activeAnswerSequences.splice(i, 1);\r\n            }\r\n            // Si es adyacente pero currentCellAlreadyInSequence es true, o si no es adyacente pero answer[0] === letter,\r\n            // la secuencia se mantiene como está para este ciclo (podría ser un nuevo intento o una palabra diferente).\r\n        } else {\r\n            // La letra no coincide con la siguiente esperada.\r\n            // Si la letra actual NO es la primera letra de esta secuencia, entonces esta secuencia se rompe.\r\n            if (answer[0] !== letter) {\r\n                 this.activeAnswerSequences.splice(i, 1);\r\n            }\r\n            // Si es la primera letra, se mantiene (podría ser un nuevo intento o una palabra diferente).\r\n        }\r\n    }\r\n    // Filtrar duplicados y completadas al final\r\n    this.activeAnswerSequences = this.activeAnswerSequences.filter((seq, index, self) =>\r\n        !seq.isComplete &&\r\n        index === self.findIndex((s) => s.answerId === seq.answerId) // Mantiene la primera instancia de cada answerId\r\n    );\r\n  }\r\n\r\n\r\n  markAnswerAsFound(sequence: AnswerSequence): void {\r\n    const questionIndex = this.currentQuestions.findIndex(q => q.id === sequence.answerId);\r\n    if (questionIndex === -1 || this.currentQuestions[questionIndex].isFound) return;\r\n\r\n    this.currentQuestions[questionIndex].isFound = true;\r\n    sequence.positions.forEach((pos, index) => {\r\n      if(this.currentQuestions[questionIndex].foundLetters.length > index){\r\n         this.currentQuestions[questionIndex].foundLetters[index] = true;\r\n      }\r\n      this.questionService.markLetterFound(sequence.answerId, index);\r\n\r\n      const alreadyInFound = this.foundPositions.some(fp => fp.row === pos.row && fp.col === pos.col && fp.answerId === sequence.answerId && fp.letterIndex === index);\r\n      if(!alreadyInFound) {\r\n        this.foundPositions.push({\r\n          row: pos.row,\r\n          col: pos.col,\r\n          answerId: sequence.answerId,\r\n          letterIndex: index,\r\n          color: this.answerColors[sequence.answerId]\r\n        });\r\n      }\r\n    });\r\n\r\n    this.activeAnswerSequences = this.activeAnswerSequences.filter(seq => seq.answerId !== sequence.answerId);\r\n\r\n    if (this.currentQuestions.every(q => q.isFound)) {\r\n      this.finalScore = this.calculateScore();\r\n      this.showWinMenu = true;\r\n      this.lockKeyboard();\r\n      this.isGameOver = true;\r\n      if (this.timerInterval) clearInterval(this.timerInterval);\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  calculateScore(): number {\r\n    const factor = this.gameDifficulty === 'facil' ? 0.7\r\n                 : this.gameDifficulty === 'medio' ? 0.5\r\n                 : 0.3;\r\n    return Math.max(0, Math.floor((this.timeLeft * factor) - this.steps));\r\n  }\r\n\r\n  isCarPosition(i: number, j: number): boolean {\r\n    return this.carPosition.row === i && this.carPosition.col === j;\r\n  }\r\n\r\n  getPositionColor(i: number, j: number): string | undefined {\r\n    const foundPosition = this.foundPositions.find(pos => pos.row === i && pos.col === j);\r\n    return foundPosition ? foundPosition.color : undefined;\r\n  }\r\n\r\n  isPositionFound(i: number, j: number): boolean {\r\n    return this.foundPositions.some(pos => pos.row === i && pos.col === j);\r\n  }\r\n\r\n  getQuestionProgress(questionId: string): { found: number, total: number } {\r\n    const question = this.currentQuestions.find(q => q.id === questionId);\r\n    if (!question || !question.answer) return { found: 0, total: 0 };\r\n    const foundCount = question.foundLetters.filter((f: boolean) => f).length;\r\n    return { found: foundCount, total: question.answer.length };\r\n  }\r\n\r\n  isQuestionLetterFound(questionId: string, letterIndex: number): boolean {\r\n    const question = this.currentQuestions.find(q => q.id === questionId);\r\n    // Añadir chequeo para foundLetters y su longitud\r\n    return question && question.foundLetters && question.foundLetters.length > letterIndex ? question.foundLetters[letterIndex] : false;\r\n  }\r\n\r\n  moveCar(direction: 'up' | 'down' | 'left' | 'right'): void {\r\n    if (this.isGameOver || !this.board.length) return;\r\n    const newPos = { ...this.carPosition };\r\n    switch (direction) {\r\n      case 'up': if (newPos.row > 0) newPos.row--; break;\r\n      case 'down': if (newPos.row < this.board.length - 1) newPos.row++; break;\r\n      case 'left': if (newPos.col > 0) newPos.col--; break;\r\n      case 'right': if (newPos.col < this.board[0].length - 1) newPos.col++; break;\r\n    }\r\n    if (newPos.row !== this.carPosition.row || newPos.col !== this.carPosition.col) {\r\n        this.gameService.updateCarPosition(newPos.row, newPos.col);\r\n    }\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timerInterval) clearInterval(this.timerInterval);\r\n    this.timerInterval = setInterval(() => {\r\n      if (this.timeLeft > 0 && !this.isGameOver) {\r\n        this.timeLeft--;\r\n      } else if (this.timeLeft === 0 && !this.isGameOver) {\r\n        this.isGameOver = true;\r\n        this.lockKeyboard();\r\n        clearInterval(this.timerInterval);\r\n        this.cdr.detectChanges();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  resetGame(): void {\r\n    if (this.timerInterval) {\r\n        clearInterval(this.timerInterval);\r\n        this.timerInterval = null;\r\n    }\r\n    this.questionService.resetCurrentQuestionsProgress();\r\n    this.questionService.loadGameQuestions(this.gameDifficulty);\r\n    this.steps = 10; // Reinicia el tope de movimientos\r\n    this.unlockKeyboard();\r\n  }\r\n\r\n  lockKeyboard() { this.keyboardLocked = true; }\r\n  unlockKeyboard() { this.keyboardLocked = false; }\r\n\r\n  addMove(direction: 'up' | 'down' | 'left' | 'right') {\r\n    if (this.moveSequence.length < this.steps) {\r\n      this.moveSequence.push(direction);\r\n    }\r\n  }\r\n\r\n  clearMoveSequence() {\r\n    this.moveSequence = [];\r\n  }\r\n\r\n  async sendMoveSequence() {\r\n    let movesToExecute = Math.min(this.moveSequence.length, this.steps);\r\n    for (let i = 0; i < movesToExecute; i++) {\r\n      this.moveCar(this.moveSequence[i]);\r\n      await new Promise(res => setTimeout(res, 120));\r\n      this.steps--;\r\n      if (this.steps === 0) break;\r\n    }\r\n    this.clearMoveSequence();\r\n    // Si los pasos llegan a 0, bloquear teclado y movimientos\r\n    if (this.steps === 0) {\r\n      this.lockKeyboard();\r\n      this.isGameOver = true;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n}\r\n","<div class=\"game-container\">\r\n    <h2>Sopa de Letras: Edición Dinámica</h2>\r\n\r\n    <div class=\"timer\" [class.game-over]=\"isGameOver && timeLeft === 0\">\r\n        ⏰ Tiempo restante: {{ timeLeft }}s\r\n    </div>\r\n\r\n    <div *ngIf=\"isGameOver && !showWinMenu && timeLeft === 0\" class=\"game-over-modal\">\r\n        <div class=\"game-over-content\">\r\n            <h2>¡Game Over!</h2>\r\n            <p>Se acabó el tiempo.</p>\r\n            <button (click)=\"resetGame()\">Reiniciar</button>\r\n            <a class=\"home-link\" routerLink=\"/\" routerLinkActive=\"active-link\"><button>HOME</button></a>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"showWinMenu\" class=\"game-over-modal\">\r\n        <div class=\"game-over-content\">\r\n            <h2>¡Felicidades!</h2>\r\n            <p>¡Encontraste todas las respuestas!</p>\r\n            <p>Puntaje final: <b>{{ finalScore }}</b></p>\r\n            <button (click)=\"resetGame()\">Jugar de nuevo</button>\r\n            <a class=\"home-link\" routerLink=\"/\" routerLinkActive=\"active-link\"><button>HOME</button></a>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"game-layout\" [class.mobile-layout]=\"isMobileDevice\" [class.desktop-layout]=\"!isMobileDevice\">\r\n        <div class=\"board\" *ngIf=\"board.length > 0\">\r\n            <div class=\"row\" *ngFor=\"let row of board; let i = index\">\r\n                <app-cell *ngFor=\"let cell of row; let j = index\" [value]=\"cell\" [isCarPosition]=\"isCarPosition(i, j)\" [isFound]=\"isPositionFound(i, j)\" [foundColor]=\"getPositionColor(i, j)\">\r\n                </app-cell>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"board.length === 0 && currentQuestions.length > 0\" class=\"loading-board\">\r\n            Cargando tablero...\r\n        </div>\r\n        <div *ngIf=\"currentQuestions.length === 0\" class=\"no-questions\">\r\n            <p>No hay preguntas disponibles para esta dificultad.</p>\r\n            <p>Por favor, ve al <a routerLink=\"/admin\">Panel de Administrador</a> para agregar algunas.</p>\r\n        </div>\r\n\r\n\r\n        <div class=\"target-elements\" *ngIf=\"currentQuestions.length > 0\">\r\n            <h3>Encuentra las Respuestas a estas Preguntas:</h3>\r\n            <div class=\"questions-container\">\r\n                <div class=\"question-item\" *ngFor=\"let question of currentQuestions\" [style.border-left-color]=\"answerColors[question.id]\" [class.question-found]=\"question.isFound\">\r\n                    <div class=\"question-text\">\r\n                        <strong>{{ question.question }}</strong>\r\n                    </div>\r\n                    <div class=\"answer-letters\">\r\n                        <span *ngFor=\"let letter of question.answer.split(''); let i = index\" [class.found]=\"isQuestionLetterFound(question.id, i)\" [style.background-color]=\"isQuestionLetterFound(question.id, i) ? answerColors[question.id] : ''\">\r\n              {{ letter }}\r\n            </span>\r\n                    </div>\r\n                    <div class=\"progress\">\r\n                        {{ getQuestionProgress(question.id).found }} de {{ getQuestionProgress(question.id).total }} letras\r\n                    </div>\r\n                </div>\r\n                <div class=\"game-actions\">\r\n                    <a class=\"home-link\" routerLink=\"/\" routerLinkActive=\"active-link\"><button>HOME</button></a>\r\n                    <button class=\"reset-button\" type=\"button\" (click)=\"resetGame()\">REINICIAR</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"controls-move-chain\" *ngIf=\"currentQuestions.length > 0\">\r\n        <div class=\"move-buttons\">\r\n            <button type=\"button\" class=\"btn-up\" (click)=\"addMove('up')\">↑</button>\r\n            <button type=\"button\" class=\"btn-left\" (click)=\"addMove('left')\">←</button>\r\n            <button type=\"button\" class=\"btn-right\" (click)=\"addMove('right')\">→</button>\r\n            <button type=\"button\" class=\"btn-down\" (click)=\"addMove('down')\">↓</button>\r\n        </div>\r\n        <div class=\"move-sequence\">\r\n            <span *ngIf=\"moveSequence.length === 0\" class=\"move-placeholder\">Selecciona movimientos...</span>\r\n            <ng-container *ngFor=\"let move of moveSequence; let idx = index\">\r\n                <span class=\"move-chip\" [ngClass]=\"'move-' + move\">{{ move | titlecase }}</span>\r\n            </ng-container>\r\n            <button *ngIf=\"moveSequence.length > 0\" class=\"clear-moves\" (click)=\"clearMoveSequence()\" title=\"Limpiar secuencia\">✕</button>\r\n        </div>\r\n        <button class=\"send-moves\" [disabled]=\"moveSequence.length === 0\" (click)=\"sendMoveSequence()\">Enviar</button>\r\n        <div class=\"steps-counter\">Pasos: {{ steps }}</div>\r\n    </div>\r\n\r\n    <div class=\"keyboard-instructions\" *ngIf=\"!isMobileDevice && currentQuestions.length > 0\">\r\n        <p>Usa las flechas del teclado para moverte.</p>\r\n    </div>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}